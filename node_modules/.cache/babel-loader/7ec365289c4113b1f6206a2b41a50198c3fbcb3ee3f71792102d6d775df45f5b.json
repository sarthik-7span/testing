{"ast":null,"code":"export default {\n  name: \"SecondIndex\",\n  data() {\n    return {\n      data: [],\n      filter: ''\n    };\n  },\n  mounted() {\n    this.$http.get(\"https://jsonplaceholder.typicode.com/posts\").then(value => this.data = value.body.slice(0, 10));\n  },\n  computed: {\n    filterblog() {\n      return this.data.filter(get => {\n        return get.title.match(this.filter);\n      });\n    }\n  },\n  filters: {\n    bold(value) {\n      return value.toUpperCase();\n    }\n  },\n  directives: {\n    'rainbow': {\n      bind(el) {\n        el.style.color = \"#\" + Math.random().toString().slice(2, 8);\n      }\n    },\n    'width': {\n      bind(el, binding) {\n        if (binding.value == 'wide') {\n          el.style.maxWidth = \"1200px\";\n        } else if (binding.value == 'mid-wide') {\n          el.style.maxWidth = \"1400px\";\n        } else {\n          el.style.maxWidth = \"1600px\";\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAiBA;EACAA;EACAC;IACA;MACAA;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACA;MACAC;QACAC;MACA;IACA;IACA;MACAD;QACA;UACAC;QACA,OACA;UACAA;QACA,OACA;UACAA;QACA;MACA;IACA;EACA;AACA","names":["name","data","filter","mounted","computed","filterblog","filters","bold","directives","bind","el"],"sourceRoot":"src/components","sources":["ShowBlog.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>ShowBlog</h1>\n        <p>{{ data }}</p>\n        <ul>\n            <div>\n                <input type=\"text\" v-model=\"filter\" placeholder=\"Serch here...\">\n            </div>\n            <li v-for=\"get in filterblog\" :key=\"get\" v-rainbow style=\"background-color:aquamarine;\">\n                {{ get.userId }} / {{ get.body | bold }}\n                <p style=\"color:red\">{{ get.title }}</p>\n            </li>\n        </ul>\n    </div>\n</template>\n<script>\n\nexport default {\n    name: \"SecondIndex\",\n    data() {\n        return {\n            data: [],\n            filter: ''\n        }\n    },\n    mounted() {\n        this.$http.get(\"https://jsonplaceholder.typicode.com/posts\").then((value) => this.data = value.body.slice(0, 10));\n    },\n    computed: {\n        filterblog() {\n            return this.data.filter((get) => {\n                return get.title.match(this.filter)\n            })\n        }\n    },\n    filters: {\n        bold(value) {\n            return value.toUpperCase()\n        }\n    },\n    directives: {\n        'rainbow': {\n            bind(el) {\n                el.style.color = \"#\" + Math.random().toString().slice(2, 8)\n            }\n        },\n        'width': {\n            bind(el, binding) {\n                if (binding.value == 'wide') {\n                    el.style.maxWidth = \"1200px\";\n                }\n                else if (binding.value == 'mid-wide') {\n                    el.style.maxWidth = \"1400px\";\n                }\n                else {\n                    el.style.maxWidth = \"1600px\";\n                }\n            }\n        }\n    }\n}\n</script>\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}