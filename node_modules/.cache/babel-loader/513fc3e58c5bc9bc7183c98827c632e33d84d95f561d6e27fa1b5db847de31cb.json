{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnsupportedProtocolError = exports.ReadError = exports.TimeoutError = exports.UploadError = exports.CacheError = exports.HTTPError = exports.MaxRedirectsError = exports.RequestError = exports.setNonEnumerableProperties = exports.knownHookEvents = exports.withoutBody = exports.kIsNormalizedAlready = void 0;\nconst util_1 = require(\"util\");\nconst stream_1 = require(\"stream\");\nconst fs_1 = require(\"fs\");\nconst url_1 = require(\"url\");\nconst http = require(\"http\");\nconst http_1 = require(\"http\");\nconst https = require(\"https\");\nconst http_timer_1 = require(\"@szmarczak/http-timer\");\nconst cacheable_lookup_1 = require(\"cacheable-lookup\");\nconst CacheableRequest = require(\"cacheable-request\");\nconst decompressResponse = require(\"decompress-response\");\n// @ts-expect-error Missing types\nconst http2wrapper = require(\"http2-wrapper\");\nconst lowercaseKeys = require(\"lowercase-keys\");\nconst is_1 = require(\"@sindresorhus/is\");\nconst get_body_size_1 = require(\"./utils/get-body-size\");\nconst is_form_data_1 = require(\"./utils/is-form-data\");\nconst proxy_events_1 = require(\"./utils/proxy-events\");\nconst timed_out_1 = require(\"./utils/timed-out\");\nconst url_to_options_1 = require(\"./utils/url-to-options\");\nconst options_to_url_1 = require(\"./utils/options-to-url\");\nconst weakable_map_1 = require(\"./utils/weakable-map\");\nconst get_buffer_1 = require(\"./utils/get-buffer\");\nconst dns_ip_version_1 = require(\"./utils/dns-ip-version\");\nconst is_response_ok_1 = require(\"./utils/is-response-ok\");\nconst deprecation_warning_1 = require(\"../utils/deprecation-warning\");\nconst normalize_arguments_1 = require(\"../as-promise/normalize-arguments\");\nconst calculate_retry_delay_1 = require(\"./calculate-retry-delay\");\nlet globalDnsCache;\nconst kRequest = Symbol('request');\nconst kResponse = Symbol('response');\nconst kResponseSize = Symbol('responseSize');\nconst kDownloadedSize = Symbol('downloadedSize');\nconst kBodySize = Symbol('bodySize');\nconst kUploadedSize = Symbol('uploadedSize');\nconst kServerResponsesPiped = Symbol('serverResponsesPiped');\nconst kUnproxyEvents = Symbol('unproxyEvents');\nconst kIsFromCache = Symbol('isFromCache');\nconst kCancelTimeouts = Symbol('cancelTimeouts');\nconst kStartedReading = Symbol('startedReading');\nconst kStopReading = Symbol('stopReading');\nconst kTriggerRead = Symbol('triggerRead');\nconst kBody = Symbol('body');\nconst kJobs = Symbol('jobs');\nconst kOriginalResponse = Symbol('originalResponse');\nconst kRetryTimeout = Symbol('retryTimeout');\nexports.kIsNormalizedAlready = Symbol('isNormalizedAlready');\nconst supportsBrotli = is_1.default.string(process.versions.brotli);\nexports.withoutBody = new Set(['GET', 'HEAD']);\nexports.knownHookEvents = ['init', 'beforeRequest', 'beforeRedirect', 'beforeError', 'beforeRetry',\n// Promise-Only\n'afterResponse'];\nfunction validateSearchParameters(searchParameters) {\n  // eslint-disable-next-line guard-for-in\n  for (const key in searchParameters) {\n    const value = searchParameters[key];\n    if (!is_1.default.string(value) && !is_1.default.number(value) && !is_1.default.boolean(value) && !is_1.default.null_(value) && !is_1.default.undefined(value)) {\n      throw new TypeError(`The \\`searchParams\\` value '${String(value)}' must be a string, number, boolean or null`);\n    }\n  }\n}\nfunction isClientRequest(clientRequest) {\n  return is_1.default.object(clientRequest) && !('statusCode' in clientRequest);\n}\nconst cacheableStore = new weakable_map_1.default();\nconst waitForOpenFile = async file => new Promise((resolve, reject) => {\n  const onError = error => {\n    reject(error);\n  };\n  // Node.js 12 has incomplete types\n  if (!file.pending) {\n    resolve();\n  }\n  file.once('error', onError);\n  file.once('ready', () => {\n    file.off('error', onError);\n    resolve();\n  });\n});\nconst redirectCodes = new Set([300, 301, 302, 303, 304, 307, 308]);\nconst nonEnumerableProperties = ['context', 'body', 'json', 'form'];\nexports.setNonEnumerableProperties = (sources, to) => {\n  // Non enumerable properties shall not be merged\n  const properties = {};\n  for (const source of sources) {\n    if (!source) {\n      continue;\n    }\n    for (const name of nonEnumerableProperties) {\n      if (!(name in source)) {\n        continue;\n      }\n      properties[name] = {\n        writable: true,\n        configurable: true,\n        enumerable: false,\n        // @ts-expect-error TS doesn't see the check above\n        value: source[name]\n      };\n    }\n  }\n  Object.defineProperties(to, properties);\n};\n/**\nAn error to be thrown when a request fails.\nContains a `code` property with error class code, like `ECONNREFUSED`.\n*/\nclass RequestError extends Error {\n  constructor(message, error, self) {\n    var _a, _b;\n    super(message);\n    Error.captureStackTrace(this, this.constructor);\n    this.name = 'RequestError';\n    this.code = (_a = error.code) !== null && _a !== void 0 ? _a : 'ERR_GOT_REQUEST_ERROR';\n    if (self instanceof Request) {\n      Object.defineProperty(this, 'request', {\n        enumerable: false,\n        value: self\n      });\n      Object.defineProperty(this, 'response', {\n        enumerable: false,\n        value: self[kResponse]\n      });\n      Object.defineProperty(this, 'options', {\n        // This fails because of TS 3.7.2 useDefineForClassFields\n        // Ref: https://github.com/microsoft/TypeScript/issues/34972\n        enumerable: false,\n        value: self.options\n      });\n    } else {\n      Object.defineProperty(this, 'options', {\n        // This fails because of TS 3.7.2 useDefineForClassFields\n        // Ref: https://github.com/microsoft/TypeScript/issues/34972\n        enumerable: false,\n        value: self\n      });\n    }\n    this.timings = (_b = this.request) === null || _b === void 0 ? void 0 : _b.timings;\n    // Recover the original stacktrace\n    if (is_1.default.string(error.stack) && is_1.default.string(this.stack)) {\n      const indexOfMessage = this.stack.indexOf(this.message) + this.message.length;\n      const thisStackTrace = this.stack.slice(indexOfMessage).split('\\n').reverse();\n      const errorStackTrace = error.stack.slice(error.stack.indexOf(error.message) + error.message.length).split('\\n').reverse();\n      // Remove duplicated traces\n      while (errorStackTrace.length !== 0 && errorStackTrace[0] === thisStackTrace[0]) {\n        thisStackTrace.shift();\n      }\n      this.stack = `${this.stack.slice(0, indexOfMessage)}${thisStackTrace.reverse().join('\\n')}${errorStackTrace.reverse().join('\\n')}`;\n    }\n  }\n}\nexports.RequestError = RequestError;\n/**\nAn error to be thrown when the server redirects you more than ten times.\nIncludes a `response` property.\n*/\nclass MaxRedirectsError extends RequestError {\n  constructor(request) {\n    super(`Redirected ${request.options.maxRedirects} times. Aborting.`, {}, request);\n    this.name = 'MaxRedirectsError';\n    this.code = 'ERR_TOO_MANY_REDIRECTS';\n  }\n}\nexports.MaxRedirectsError = MaxRedirectsError;\n/**\nAn error to be thrown when the server response code is not 2xx nor 3xx if `options.followRedirect` is `true`, but always except for 304.\nIncludes a `response` property.\n*/\nclass HTTPError extends RequestError {\n  constructor(response) {\n    super(`Response code ${response.statusCode} (${response.statusMessage})`, {}, response.request);\n    this.name = 'HTTPError';\n    this.code = 'ERR_NON_2XX_3XX_RESPONSE';\n  }\n}\nexports.HTTPError = HTTPError;\n/**\nAn error to be thrown when a cache method fails.\nFor example, if the database goes down or there's a filesystem error.\n*/\nclass CacheError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'CacheError';\n    this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_CACHE_ACCESS' : this.code;\n  }\n}\nexports.CacheError = CacheError;\n/**\nAn error to be thrown when the request body is a stream and an error occurs while reading from that stream.\n*/\nclass UploadError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'UploadError';\n    this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_UPLOAD' : this.code;\n  }\n}\nexports.UploadError = UploadError;\n/**\nAn error to be thrown when the request is aborted due to a timeout.\nIncludes an `event` and `timings` property.\n*/\nclass TimeoutError extends RequestError {\n  constructor(error, timings, request) {\n    super(error.message, error, request);\n    this.name = 'TimeoutError';\n    this.event = error.event;\n    this.timings = timings;\n  }\n}\nexports.TimeoutError = TimeoutError;\n/**\nAn error to be thrown when reading from response stream fails.\n*/\nclass ReadError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'ReadError';\n    this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_READING_RESPONSE_STREAM' : this.code;\n  }\n}\nexports.ReadError = ReadError;\n/**\nAn error to be thrown when given an unsupported protocol.\n*/\nclass UnsupportedProtocolError extends RequestError {\n  constructor(options) {\n    super(`Unsupported protocol \"${options.url.protocol}\"`, {}, options);\n    this.name = 'UnsupportedProtocolError';\n    this.code = 'ERR_UNSUPPORTED_PROTOCOL';\n  }\n}\nexports.UnsupportedProtocolError = UnsupportedProtocolError;\nconst proxiedRequestEvents = ['socket', 'connect', 'continue', 'information', 'upgrade', 'timeout'];\nclass Request extends stream_1.Duplex {\n  constructor(url, options = {}, defaults) {\n    super({\n      // This must be false, to enable throwing after destroy\n      // It is used for retry logic in Promise API\n      autoDestroy: false,\n      // It needs to be zero because we're just proxying the data to another stream\n      highWaterMark: 0\n    });\n    this[kDownloadedSize] = 0;\n    this[kUploadedSize] = 0;\n    this.requestInitialized = false;\n    this[kServerResponsesPiped] = new Set();\n    this.redirects = [];\n    this[kStopReading] = false;\n    this[kTriggerRead] = false;\n    this[kJobs] = [];\n    this.retryCount = 0;\n    // TODO: Remove this when targeting Node.js >= 12\n    this._progressCallbacks = [];\n    const unlockWrite = () => this._unlockWrite();\n    const lockWrite = () => this._lockWrite();\n    this.on('pipe', source => {\n      source.prependListener('data', unlockWrite);\n      source.on('data', lockWrite);\n      source.prependListener('end', unlockWrite);\n      source.on('end', lockWrite);\n    });\n    this.on('unpipe', source => {\n      source.off('data', unlockWrite);\n      source.off('data', lockWrite);\n      source.off('end', unlockWrite);\n      source.off('end', lockWrite);\n    });\n    this.on('pipe', source => {\n      if (source instanceof http_1.IncomingMessage) {\n        this.options.headers = {\n          ...source.headers,\n          ...this.options.headers\n        };\n      }\n    });\n    const {\n      json,\n      body,\n      form\n    } = options;\n    if (json || body || form) {\n      this._lockWrite();\n    }\n    if (exports.kIsNormalizedAlready in options) {\n      this.options = options;\n    } else {\n      try {\n        // @ts-expect-error Common TypeScript bug saying that `this.constructor` is not accessible\n        this.options = this.constructor.normalizeArguments(url, options, defaults);\n      } catch (error) {\n        // TODO: Move this to `_destroy()`\n        if (is_1.default.nodeStream(options.body)) {\n          options.body.destroy();\n        }\n        this.destroy(error);\n        return;\n      }\n    }\n    (async () => {\n      var _a;\n      try {\n        if (this.options.body instanceof fs_1.ReadStream) {\n          await waitForOpenFile(this.options.body);\n        }\n        const {\n          url: normalizedURL\n        } = this.options;\n        if (!normalizedURL) {\n          throw new TypeError('Missing `url` property');\n        }\n        this.requestUrl = normalizedURL.toString();\n        decodeURI(this.requestUrl);\n        await this._finalizeBody();\n        await this._makeRequest();\n        if (this.destroyed) {\n          (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.destroy();\n          return;\n        }\n        // Queued writes etc.\n        for (const job of this[kJobs]) {\n          job();\n        }\n        // Prevent memory leak\n        this[kJobs].length = 0;\n        this.requestInitialized = true;\n      } catch (error) {\n        if (error instanceof RequestError) {\n          this._beforeError(error);\n          return;\n        }\n        // This is a workaround for https://github.com/nodejs/node/issues/33335\n        if (!this.destroyed) {\n          this.destroy(error);\n        }\n      }\n    })();\n  }\n  static normalizeArguments(url, options, defaults) {\n    var _a, _b, _c, _d, _e;\n    const rawOptions = options;\n    if (is_1.default.object(url) && !is_1.default.urlInstance(url)) {\n      options = {\n        ...defaults,\n        ...url,\n        ...options\n      };\n    } else {\n      if (url && options && options.url !== undefined) {\n        throw new TypeError('The `url` option is mutually exclusive with the `input` argument');\n      }\n      options = {\n        ...defaults,\n        ...options\n      };\n      if (url !== undefined) {\n        options.url = url;\n      }\n      if (is_1.default.urlInstance(options.url)) {\n        options.url = new url_1.URL(options.url.toString());\n      }\n    }\n    // TODO: Deprecate URL options in Got 12.\n    // Support extend-specific options\n    if (options.cache === false) {\n      options.cache = undefined;\n    }\n    if (options.dnsCache === false) {\n      options.dnsCache = undefined;\n    }\n    // Nice type assertions\n    is_1.assert.any([is_1.default.string, is_1.default.undefined], options.method);\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.headers);\n    is_1.assert.any([is_1.default.string, is_1.default.urlInstance, is_1.default.undefined], options.prefixUrl);\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.cookieJar);\n    is_1.assert.any([is_1.default.object, is_1.default.string, is_1.default.undefined], options.searchParams);\n    is_1.assert.any([is_1.default.object, is_1.default.string, is_1.default.undefined], options.cache);\n    is_1.assert.any([is_1.default.object, is_1.default.number, is_1.default.undefined], options.timeout);\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.context);\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.hooks);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.decompress);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.ignoreInvalidCookies);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.followRedirect);\n    is_1.assert.any([is_1.default.number, is_1.default.undefined], options.maxRedirects);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.throwHttpErrors);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.http2);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.allowGetBody);\n    is_1.assert.any([is_1.default.string, is_1.default.undefined], options.localAddress);\n    is_1.assert.any([dns_ip_version_1.isDnsLookupIpVersion, is_1.default.undefined], options.dnsLookupIpVersion);\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.https);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.rejectUnauthorized);\n    if (options.https) {\n      is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.https.rejectUnauthorized);\n      is_1.assert.any([is_1.default.function_, is_1.default.undefined], options.https.checkServerIdentity);\n      is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.certificateAuthority);\n      is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.key);\n      is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.certificate);\n      is_1.assert.any([is_1.default.string, is_1.default.undefined], options.https.passphrase);\n      is_1.assert.any([is_1.default.string, is_1.default.buffer, is_1.default.array, is_1.default.undefined], options.https.pfx);\n    }\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.cacheOptions);\n    // `options.method`\n    if (is_1.default.string(options.method)) {\n      options.method = options.method.toUpperCase();\n    } else {\n      options.method = 'GET';\n    }\n    // `options.headers`\n    if (options.headers === (defaults === null || defaults === void 0 ? void 0 : defaults.headers)) {\n      options.headers = {\n        ...options.headers\n      };\n    } else {\n      options.headers = lowercaseKeys({\n        ...(defaults === null || defaults === void 0 ? void 0 : defaults.headers),\n        ...options.headers\n      });\n    }\n    // Disallow legacy `url.Url`\n    if ('slashes' in options) {\n      throw new TypeError('The legacy `url.Url` has been deprecated. Use `URL` instead.');\n    }\n    // `options.auth`\n    if ('auth' in options) {\n      throw new TypeError('Parameter `auth` is deprecated. Use `username` / `password` instead.');\n    }\n    // `options.searchParams`\n    if ('searchParams' in options) {\n      if (options.searchParams && options.searchParams !== (defaults === null || defaults === void 0 ? void 0 : defaults.searchParams)) {\n        let searchParameters;\n        if (is_1.default.string(options.searchParams) || options.searchParams instanceof url_1.URLSearchParams) {\n          searchParameters = new url_1.URLSearchParams(options.searchParams);\n        } else {\n          validateSearchParameters(options.searchParams);\n          searchParameters = new url_1.URLSearchParams();\n          // eslint-disable-next-line guard-for-in\n          for (const key in options.searchParams) {\n            const value = options.searchParams[key];\n            if (value === null) {\n              searchParameters.append(key, '');\n            } else if (value !== undefined) {\n              searchParameters.append(key, value);\n            }\n          }\n        }\n        // `normalizeArguments()` is also used to merge options\n        (_a = defaults === null || defaults === void 0 ? void 0 : defaults.searchParams) === null || _a === void 0 ? void 0 : _a.forEach((value, key) => {\n          // Only use default if one isn't already defined\n          if (!searchParameters.has(key)) {\n            searchParameters.append(key, value);\n          }\n        });\n        options.searchParams = searchParameters;\n      }\n    }\n    // `options.username` & `options.password`\n    options.username = (_b = options.username) !== null && _b !== void 0 ? _b : '';\n    options.password = (_c = options.password) !== null && _c !== void 0 ? _c : '';\n    // `options.prefixUrl` & `options.url`\n    if (is_1.default.undefined(options.prefixUrl)) {\n      options.prefixUrl = (_d = defaults === null || defaults === void 0 ? void 0 : defaults.prefixUrl) !== null && _d !== void 0 ? _d : '';\n    } else {\n      options.prefixUrl = options.prefixUrl.toString();\n      if (options.prefixUrl !== '' && !options.prefixUrl.endsWith('/')) {\n        options.prefixUrl += '/';\n      }\n    }\n    if (is_1.default.string(options.url)) {\n      if (options.url.startsWith('/')) {\n        throw new Error('`input` must not start with a slash when using `prefixUrl`');\n      }\n      options.url = options_to_url_1.default(options.prefixUrl + options.url, options);\n    } else if (is_1.default.undefined(options.url) && options.prefixUrl !== '' || options.protocol) {\n      options.url = options_to_url_1.default(options.prefixUrl, options);\n    }\n    if (options.url) {\n      if ('port' in options) {\n        delete options.port;\n      }\n      // Make it possible to change `options.prefixUrl`\n      let {\n        prefixUrl\n      } = options;\n      Object.defineProperty(options, 'prefixUrl', {\n        set: value => {\n          const url = options.url;\n          if (!url.href.startsWith(value)) {\n            throw new Error(`Cannot change \\`prefixUrl\\` from ${prefixUrl} to ${value}: ${url.href}`);\n          }\n          options.url = new url_1.URL(value + url.href.slice(prefixUrl.length));\n          prefixUrl = value;\n        },\n        get: () => prefixUrl\n      });\n      // Support UNIX sockets\n      let {\n        protocol\n      } = options.url;\n      if (protocol === 'unix:') {\n        protocol = 'http:';\n        options.url = new url_1.URL(`http://unix${options.url.pathname}${options.url.search}`);\n      }\n      // Set search params\n      if (options.searchParams) {\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        options.url.search = options.searchParams.toString();\n      }\n      // Protocol check\n      if (protocol !== 'http:' && protocol !== 'https:') {\n        throw new UnsupportedProtocolError(options);\n      }\n      // Update `username`\n      if (options.username === '') {\n        options.username = options.url.username;\n      } else {\n        options.url.username = options.username;\n      }\n      // Update `password`\n      if (options.password === '') {\n        options.password = options.url.password;\n      } else {\n        options.url.password = options.password;\n      }\n    }\n    // `options.cookieJar`\n    const {\n      cookieJar\n    } = options;\n    if (cookieJar) {\n      let {\n        setCookie,\n        getCookieString\n      } = cookieJar;\n      is_1.assert.function_(setCookie);\n      is_1.assert.function_(getCookieString);\n      /* istanbul ignore next: Horrible `tough-cookie` v3 check */\n      if (setCookie.length === 4 && getCookieString.length === 0) {\n        setCookie = util_1.promisify(setCookie.bind(options.cookieJar));\n        getCookieString = util_1.promisify(getCookieString.bind(options.cookieJar));\n        options.cookieJar = {\n          setCookie,\n          getCookieString: getCookieString\n        };\n      }\n    }\n    // `options.cache`\n    const {\n      cache\n    } = options;\n    if (cache) {\n      if (!cacheableStore.has(cache)) {\n        cacheableStore.set(cache, new CacheableRequest((requestOptions, handler) => {\n          const result = requestOptions[kRequest](requestOptions, handler);\n          // TODO: remove this when `cacheable-request` supports async request functions.\n          if (is_1.default.promise(result)) {\n            // @ts-expect-error\n            // We only need to implement the error handler in order to support HTTP2 caching.\n            // The result will be a promise anyway.\n            result.once = (event, handler) => {\n              if (event === 'error') {\n                result.catch(handler);\n              } else if (event === 'abort') {\n                // The empty catch is needed here in case when\n                // it rejects before it's `await`ed in `_makeRequest`.\n                (async () => {\n                  try {\n                    const request = await result;\n                    request.once('abort', handler);\n                  } catch (_a) {}\n                })();\n              } else {\n                /* istanbul ignore next: safety check */\n                throw new Error(`Unknown HTTP2 promise event: ${event}`);\n              }\n              return result;\n            };\n          }\n          return result;\n        }, cache));\n      }\n    }\n    // `options.cacheOptions`\n    options.cacheOptions = {\n      ...options.cacheOptions\n    };\n    // `options.dnsCache`\n    if (options.dnsCache === true) {\n      if (!globalDnsCache) {\n        globalDnsCache = new cacheable_lookup_1.default();\n      }\n      options.dnsCache = globalDnsCache;\n    } else if (!is_1.default.undefined(options.dnsCache) && !options.dnsCache.lookup) {\n      throw new TypeError(`Parameter \\`dnsCache\\` must be a CacheableLookup instance or a boolean, got ${is_1.default(options.dnsCache)}`);\n    }\n    // `options.timeout`\n    if (is_1.default.number(options.timeout)) {\n      options.timeout = {\n        request: options.timeout\n      };\n    } else if (defaults && options.timeout !== defaults.timeout) {\n      options.timeout = {\n        ...defaults.timeout,\n        ...options.timeout\n      };\n    } else {\n      options.timeout = {\n        ...options.timeout\n      };\n    }\n    // `options.context`\n    if (!options.context) {\n      options.context = {};\n    }\n    // `options.hooks`\n    const areHooksDefault = options.hooks === (defaults === null || defaults === void 0 ? void 0 : defaults.hooks);\n    options.hooks = {\n      ...options.hooks\n    };\n    for (const event of exports.knownHookEvents) {\n      if (event in options.hooks) {\n        if (is_1.default.array(options.hooks[event])) {\n          // See https://github.com/microsoft/TypeScript/issues/31445#issuecomment-576929044\n          options.hooks[event] = [...options.hooks[event]];\n        } else {\n          throw new TypeError(`Parameter \\`${event}\\` must be an Array, got ${is_1.default(options.hooks[event])}`);\n        }\n      } else {\n        options.hooks[event] = [];\n      }\n    }\n    if (defaults && !areHooksDefault) {\n      for (const event of exports.knownHookEvents) {\n        const defaultHooks = defaults.hooks[event];\n        if (defaultHooks.length > 0) {\n          // See https://github.com/microsoft/TypeScript/issues/31445#issuecomment-576929044\n          options.hooks[event] = [...defaults.hooks[event], ...options.hooks[event]];\n        }\n      }\n    }\n    // DNS options\n    if ('family' in options) {\n      deprecation_warning_1.default('\"options.family\" was never documented, please use \"options.dnsLookupIpVersion\"');\n    }\n    // HTTPS options\n    if (defaults === null || defaults === void 0 ? void 0 : defaults.https) {\n      options.https = {\n        ...defaults.https,\n        ...options.https\n      };\n    }\n    if ('rejectUnauthorized' in options) {\n      deprecation_warning_1.default('\"options.rejectUnauthorized\" is now deprecated, please use \"options.https.rejectUnauthorized\"');\n    }\n    if ('checkServerIdentity' in options) {\n      deprecation_warning_1.default('\"options.checkServerIdentity\" was never documented, please use \"options.https.checkServerIdentity\"');\n    }\n    if ('ca' in options) {\n      deprecation_warning_1.default('\"options.ca\" was never documented, please use \"options.https.certificateAuthority\"');\n    }\n    if ('key' in options) {\n      deprecation_warning_1.default('\"options.key\" was never documented, please use \"options.https.key\"');\n    }\n    if ('cert' in options) {\n      deprecation_warning_1.default('\"options.cert\" was never documented, please use \"options.https.certificate\"');\n    }\n    if ('passphrase' in options) {\n      deprecation_warning_1.default('\"options.passphrase\" was never documented, please use \"options.https.passphrase\"');\n    }\n    if ('pfx' in options) {\n      deprecation_warning_1.default('\"options.pfx\" was never documented, please use \"options.https.pfx\"');\n    }\n    // Other options\n    if ('followRedirects' in options) {\n      throw new TypeError('The `followRedirects` option does not exist. Use `followRedirect` instead.');\n    }\n    if (options.agent) {\n      for (const key in options.agent) {\n        if (key !== 'http' && key !== 'https' && key !== 'http2') {\n          throw new TypeError(`Expected the \\`options.agent\\` properties to be \\`http\\`, \\`https\\` or \\`http2\\`, got \\`${key}\\``);\n        }\n      }\n    }\n    options.maxRedirects = (_e = options.maxRedirects) !== null && _e !== void 0 ? _e : 0;\n    // Set non-enumerable properties\n    exports.setNonEnumerableProperties([defaults, rawOptions], options);\n    return normalize_arguments_1.default(options, defaults);\n  }\n  _lockWrite() {\n    const onLockedWrite = () => {\n      throw new TypeError('The payload has been already provided');\n    };\n    this.write = onLockedWrite;\n    this.end = onLockedWrite;\n  }\n  _unlockWrite() {\n    this.write = super.write;\n    this.end = super.end;\n  }\n  async _finalizeBody() {\n    const {\n      options\n    } = this;\n    const {\n      headers\n    } = options;\n    const isForm = !is_1.default.undefined(options.form);\n    const isJSON = !is_1.default.undefined(options.json);\n    const isBody = !is_1.default.undefined(options.body);\n    const hasPayload = isForm || isJSON || isBody;\n    const cannotHaveBody = exports.withoutBody.has(options.method) && !(options.method === 'GET' && options.allowGetBody);\n    this._cannotHaveBody = cannotHaveBody;\n    if (hasPayload) {\n      if (cannotHaveBody) {\n        throw new TypeError(`The \\`${options.method}\\` method cannot be used with a body`);\n      }\n      if ([isBody, isForm, isJSON].filter(isTrue => isTrue).length > 1) {\n        throw new TypeError('The `body`, `json` and `form` options are mutually exclusive');\n      }\n      if (isBody && !(options.body instanceof stream_1.Readable) && !is_1.default.string(options.body) && !is_1.default.buffer(options.body) && !is_form_data_1.default(options.body)) {\n        throw new TypeError('The `body` option must be a stream.Readable, string or Buffer');\n      }\n      if (isForm && !is_1.default.object(options.form)) {\n        throw new TypeError('The `form` option must be an Object');\n      }\n      {\n        // Serialize body\n        const noContentType = !is_1.default.string(headers['content-type']);\n        if (isBody) {\n          // Special case for https://github.com/form-data/form-data\n          if (is_form_data_1.default(options.body) && noContentType) {\n            headers['content-type'] = `multipart/form-data; boundary=${options.body.getBoundary()}`;\n          }\n          this[kBody] = options.body;\n        } else if (isForm) {\n          if (noContentType) {\n            headers['content-type'] = 'application/x-www-form-urlencoded';\n          }\n          this[kBody] = new url_1.URLSearchParams(options.form).toString();\n        } else {\n          if (noContentType) {\n            headers['content-type'] = 'application/json';\n          }\n          this[kBody] = options.stringifyJson(options.json);\n        }\n        const uploadBodySize = await get_body_size_1.default(this[kBody], options.headers);\n        // See https://tools.ietf.org/html/rfc7230#section-3.3.2\n        // A user agent SHOULD send a Content-Length in a request message when\n        // no Transfer-Encoding is sent and the request method defines a meaning\n        // for an enclosed payload body.  For example, a Content-Length header\n        // field is normally sent in a POST request even when the value is 0\n        // (indicating an empty payload body).  A user agent SHOULD NOT send a\n        // Content-Length header field when the request message does not contain\n        // a payload body and the method semantics do not anticipate such a\n        // body.\n        if (is_1.default.undefined(headers['content-length']) && is_1.default.undefined(headers['transfer-encoding'])) {\n          if (!cannotHaveBody && !is_1.default.undefined(uploadBodySize)) {\n            headers['content-length'] = String(uploadBodySize);\n          }\n        }\n      }\n    } else if (cannotHaveBody) {\n      this._lockWrite();\n    } else {\n      this._unlockWrite();\n    }\n    this[kBodySize] = Number(headers['content-length']) || undefined;\n  }\n  async _onResponseBase(response) {\n    const {\n      options\n    } = this;\n    const {\n      url\n    } = options;\n    this[kOriginalResponse] = response;\n    if (options.decompress) {\n      response = decompressResponse(response);\n    }\n    const statusCode = response.statusCode;\n    const typedResponse = response;\n    typedResponse.statusMessage = typedResponse.statusMessage ? typedResponse.statusMessage : http.STATUS_CODES[statusCode];\n    typedResponse.url = options.url.toString();\n    typedResponse.requestUrl = this.requestUrl;\n    typedResponse.redirectUrls = this.redirects;\n    typedResponse.request = this;\n    typedResponse.isFromCache = response.fromCache || false;\n    typedResponse.ip = this.ip;\n    typedResponse.retryCount = this.retryCount;\n    this[kIsFromCache] = typedResponse.isFromCache;\n    this[kResponseSize] = Number(response.headers['content-length']) || undefined;\n    this[kResponse] = response;\n    response.once('end', () => {\n      this[kResponseSize] = this[kDownloadedSize];\n      this.emit('downloadProgress', this.downloadProgress);\n    });\n    response.once('error', error => {\n      // Force clean-up, because some packages don't do this.\n      // TODO: Fix decompress-response\n      response.destroy();\n      this._beforeError(new ReadError(error, this));\n    });\n    response.once('aborted', () => {\n      this._beforeError(new ReadError({\n        name: 'Error',\n        message: 'The server aborted pending request',\n        code: 'ECONNRESET'\n      }, this));\n    });\n    this.emit('downloadProgress', this.downloadProgress);\n    const rawCookies = response.headers['set-cookie'];\n    if (is_1.default.object(options.cookieJar) && rawCookies) {\n      let promises = rawCookies.map(async rawCookie => options.cookieJar.setCookie(rawCookie, url.toString()));\n      if (options.ignoreInvalidCookies) {\n        promises = promises.map(async p => p.catch(() => {}));\n      }\n      try {\n        await Promise.all(promises);\n      } catch (error) {\n        this._beforeError(error);\n        return;\n      }\n    }\n    if (options.followRedirect && response.headers.location && redirectCodes.has(statusCode)) {\n      // We're being redirected, we don't care about the response.\n      // It'd be best to abort the request, but we can't because\n      // we would have to sacrifice the TCP connection. We don't want that.\n      response.resume();\n      if (this[kRequest]) {\n        this[kCancelTimeouts]();\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete this[kRequest];\n        this[kUnproxyEvents]();\n      }\n      const shouldBeGet = statusCode === 303 && options.method !== 'GET' && options.method !== 'HEAD';\n      if (shouldBeGet || !options.methodRewriting) {\n        // Server responded with \"see other\", indicating that the resource exists at another location,\n        // and the client should request it from that location via GET or HEAD.\n        options.method = 'GET';\n        if ('body' in options) {\n          delete options.body;\n        }\n        if ('json' in options) {\n          delete options.json;\n        }\n        if ('form' in options) {\n          delete options.form;\n        }\n        this[kBody] = undefined;\n        delete options.headers['content-length'];\n      }\n      if (this.redirects.length >= options.maxRedirects) {\n        this._beforeError(new MaxRedirectsError(this));\n        return;\n      }\n      try {\n        // Do not remove. See https://github.com/sindresorhus/got/pull/214\n        const redirectBuffer = Buffer.from(response.headers.location, 'binary').toString();\n        // Handles invalid URLs. See https://github.com/sindresorhus/got/issues/604\n        const redirectUrl = new url_1.URL(redirectBuffer, url);\n        const redirectString = redirectUrl.toString();\n        decodeURI(redirectString);\n        // eslint-disable-next-line no-inner-declarations\n        function isUnixSocketURL(url) {\n          return url.protocol === 'unix:' || url.hostname === 'unix';\n        }\n        if (!isUnixSocketURL(url) && isUnixSocketURL(redirectUrl)) {\n          this._beforeError(new RequestError('Cannot redirect to UNIX socket', {}, this));\n          return;\n        }\n        // Redirecting to a different site, clear sensitive data.\n        if (redirectUrl.hostname !== url.hostname || redirectUrl.port !== url.port) {\n          if ('host' in options.headers) {\n            delete options.headers.host;\n          }\n          if ('cookie' in options.headers) {\n            delete options.headers.cookie;\n          }\n          if ('authorization' in options.headers) {\n            delete options.headers.authorization;\n          }\n          if (options.username || options.password) {\n            options.username = '';\n            options.password = '';\n          }\n        } else {\n          redirectUrl.username = options.username;\n          redirectUrl.password = options.password;\n        }\n        this.redirects.push(redirectString);\n        options.url = redirectUrl;\n        for (const hook of options.hooks.beforeRedirect) {\n          // eslint-disable-next-line no-await-in-loop\n          await hook(options, typedResponse);\n        }\n        this.emit('redirect', typedResponse, options);\n        await this._makeRequest();\n      } catch (error) {\n        this._beforeError(error);\n        return;\n      }\n      return;\n    }\n    if (options.isStream && options.throwHttpErrors && !is_response_ok_1.isResponseOk(typedResponse)) {\n      this._beforeError(new HTTPError(typedResponse));\n      return;\n    }\n    response.on('readable', () => {\n      if (this[kTriggerRead]) {\n        this._read();\n      }\n    });\n    this.on('resume', () => {\n      response.resume();\n    });\n    this.on('pause', () => {\n      response.pause();\n    });\n    response.once('end', () => {\n      this.push(null);\n    });\n    this.emit('response', response);\n    for (const destination of this[kServerResponsesPiped]) {\n      if (destination.headersSent) {\n        continue;\n      }\n      // eslint-disable-next-line guard-for-in\n      for (const key in response.headers) {\n        const isAllowed = options.decompress ? key !== 'content-encoding' : true;\n        const value = response.headers[key];\n        if (isAllowed) {\n          destination.setHeader(key, value);\n        }\n      }\n      destination.statusCode = statusCode;\n    }\n  }\n  async _onResponse(response) {\n    try {\n      await this._onResponseBase(response);\n    } catch (error) {\n      /* istanbul ignore next: better safe than sorry */\n      this._beforeError(error);\n    }\n  }\n  _onRequest(request) {\n    const {\n      options\n    } = this;\n    const {\n      timeout,\n      url\n    } = options;\n    http_timer_1.default(request);\n    this[kCancelTimeouts] = timed_out_1.default(request, timeout, url);\n    const responseEventName = options.cache ? 'cacheableResponse' : 'response';\n    request.once(responseEventName, response => {\n      void this._onResponse(response);\n    });\n    request.once('error', error => {\n      var _a;\n      // Force clean-up, because some packages (e.g. nock) don't do this.\n      request.destroy();\n      // Node.js <= 12.18.2 mistakenly emits the response `end` first.\n      (_a = request.res) === null || _a === void 0 ? void 0 : _a.removeAllListeners('end');\n      error = error instanceof timed_out_1.TimeoutError ? new TimeoutError(error, this.timings, this) : new RequestError(error.message, error, this);\n      this._beforeError(error);\n    });\n    this[kUnproxyEvents] = proxy_events_1.default(request, this, proxiedRequestEvents);\n    this[kRequest] = request;\n    this.emit('uploadProgress', this.uploadProgress);\n    // Send body\n    const body = this[kBody];\n    const currentRequest = this.redirects.length === 0 ? this : request;\n    if (is_1.default.nodeStream(body)) {\n      body.pipe(currentRequest);\n      body.once('error', error => {\n        this._beforeError(new UploadError(error, this));\n      });\n    } else {\n      this._unlockWrite();\n      if (!is_1.default.undefined(body)) {\n        this._writeRequest(body, undefined, () => {});\n        currentRequest.end();\n        this._lockWrite();\n      } else if (this._cannotHaveBody || this._noPipe) {\n        currentRequest.end();\n        this._lockWrite();\n      }\n    }\n    this.emit('request', request);\n  }\n  async _createCacheableRequest(url, options) {\n    return new Promise((resolve, reject) => {\n      // TODO: Remove `utils/url-to-options.ts` when `cacheable-request` is fixed\n      Object.assign(options, url_to_options_1.default(url));\n      // `http-cache-semantics` checks this\n      // TODO: Fix this ignore.\n      // @ts-expect-error\n      delete options.url;\n      let request;\n      // This is ugly\n      const cacheRequest = cacheableStore.get(options.cache)(options, async response => {\n        // TODO: Fix `cacheable-response`\n        response._readableState.autoDestroy = false;\n        if (request) {\n          (await request).emit('cacheableResponse', response);\n        }\n        resolve(response);\n      });\n      // Restore options\n      options.url = url;\n      cacheRequest.once('error', reject);\n      cacheRequest.once('request', async requestOrPromise => {\n        request = requestOrPromise;\n        resolve(request);\n      });\n    });\n  }\n  async _makeRequest() {\n    var _a, _b, _c, _d, _e;\n    const {\n      options\n    } = this;\n    const {\n      headers\n    } = options;\n    for (const key in headers) {\n      if (is_1.default.undefined(headers[key])) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete headers[key];\n      } else if (is_1.default.null_(headers[key])) {\n        throw new TypeError(`Use \\`undefined\\` instead of \\`null\\` to delete the \\`${key}\\` header`);\n      }\n    }\n    if (options.decompress && is_1.default.undefined(headers['accept-encoding'])) {\n      headers['accept-encoding'] = supportsBrotli ? 'gzip, deflate, br' : 'gzip, deflate';\n    }\n    // Set cookies\n    if (options.cookieJar) {\n      const cookieString = await options.cookieJar.getCookieString(options.url.toString());\n      if (is_1.default.nonEmptyString(cookieString)) {\n        options.headers.cookie = cookieString;\n      }\n    }\n    for (const hook of options.hooks.beforeRequest) {\n      // eslint-disable-next-line no-await-in-loop\n      const result = await hook(options);\n      if (!is_1.default.undefined(result)) {\n        // @ts-expect-error Skip the type mismatch to support abstract responses\n        options.request = () => result;\n        break;\n      }\n    }\n    if (options.body && this[kBody] !== options.body) {\n      this[kBody] = options.body;\n    }\n    const {\n      agent,\n      request,\n      timeout,\n      url\n    } = options;\n    if (options.dnsCache && !('lookup' in options)) {\n      options.lookup = options.dnsCache.lookup;\n    }\n    // UNIX sockets\n    if (url.hostname === 'unix') {\n      const matches = /(?<socketPath>.+?):(?<path>.+)/.exec(`${url.pathname}${url.search}`);\n      if (matches === null || matches === void 0 ? void 0 : matches.groups) {\n        const {\n          socketPath,\n          path\n        } = matches.groups;\n        Object.assign(options, {\n          socketPath,\n          path,\n          host: ''\n        });\n      }\n    }\n    const isHttps = url.protocol === 'https:';\n    // Fallback function\n    let fallbackFn;\n    if (options.http2) {\n      fallbackFn = http2wrapper.auto;\n    } else {\n      fallbackFn = isHttps ? https.request : http.request;\n    }\n    const realFn = (_a = options.request) !== null && _a !== void 0 ? _a : fallbackFn;\n    // Cache support\n    const fn = options.cache ? this._createCacheableRequest : realFn;\n    // Pass an agent directly when HTTP2 is disabled\n    if (agent && !options.http2) {\n      options.agent = agent[isHttps ? 'https' : 'http'];\n    }\n    // Prepare plain HTTP request options\n    options[kRequest] = realFn;\n    delete options.request;\n    // TODO: Fix this ignore.\n    // @ts-expect-error\n    delete options.timeout;\n    const requestOptions = options;\n    requestOptions.shared = (_b = options.cacheOptions) === null || _b === void 0 ? void 0 : _b.shared;\n    requestOptions.cacheHeuristic = (_c = options.cacheOptions) === null || _c === void 0 ? void 0 : _c.cacheHeuristic;\n    requestOptions.immutableMinTimeToLive = (_d = options.cacheOptions) === null || _d === void 0 ? void 0 : _d.immutableMinTimeToLive;\n    requestOptions.ignoreCargoCult = (_e = options.cacheOptions) === null || _e === void 0 ? void 0 : _e.ignoreCargoCult;\n    // If `dnsLookupIpVersion` is not present do not override `family`\n    if (options.dnsLookupIpVersion !== undefined) {\n      try {\n        requestOptions.family = dns_ip_version_1.dnsLookupIpVersionToFamily(options.dnsLookupIpVersion);\n      } catch (_f) {\n        throw new Error('Invalid `dnsLookupIpVersion` option value');\n      }\n    }\n    // HTTPS options remapping\n    if (options.https) {\n      if ('rejectUnauthorized' in options.https) {\n        requestOptions.rejectUnauthorized = options.https.rejectUnauthorized;\n      }\n      if (options.https.checkServerIdentity) {\n        requestOptions.checkServerIdentity = options.https.checkServerIdentity;\n      }\n      if (options.https.certificateAuthority) {\n        requestOptions.ca = options.https.certificateAuthority;\n      }\n      if (options.https.certificate) {\n        requestOptions.cert = options.https.certificate;\n      }\n      if (options.https.key) {\n        requestOptions.key = options.https.key;\n      }\n      if (options.https.passphrase) {\n        requestOptions.passphrase = options.https.passphrase;\n      }\n      if (options.https.pfx) {\n        requestOptions.pfx = options.https.pfx;\n      }\n    }\n    try {\n      let requestOrResponse = await fn(url, requestOptions);\n      if (is_1.default.undefined(requestOrResponse)) {\n        requestOrResponse = fallbackFn(url, requestOptions);\n      }\n      // Restore options\n      options.request = request;\n      options.timeout = timeout;\n      options.agent = agent;\n      // HTTPS options restore\n      if (options.https) {\n        if ('rejectUnauthorized' in options.https) {\n          delete requestOptions.rejectUnauthorized;\n        }\n        if (options.https.checkServerIdentity) {\n          // @ts-expect-error - This one will be removed when we remove the alias.\n          delete requestOptions.checkServerIdentity;\n        }\n        if (options.https.certificateAuthority) {\n          delete requestOptions.ca;\n        }\n        if (options.https.certificate) {\n          delete requestOptions.cert;\n        }\n        if (options.https.key) {\n          delete requestOptions.key;\n        }\n        if (options.https.passphrase) {\n          delete requestOptions.passphrase;\n        }\n        if (options.https.pfx) {\n          delete requestOptions.pfx;\n        }\n      }\n      if (isClientRequest(requestOrResponse)) {\n        this._onRequest(requestOrResponse);\n        // Emit the response after the stream has been ended\n      } else if (this.writable) {\n        this.once('finish', () => {\n          void this._onResponse(requestOrResponse);\n        });\n        this._unlockWrite();\n        this.end();\n        this._lockWrite();\n      } else {\n        void this._onResponse(requestOrResponse);\n      }\n    } catch (error) {\n      if (error instanceof CacheableRequest.CacheError) {\n        throw new CacheError(error, this);\n      }\n      throw new RequestError(error.message, error, this);\n    }\n  }\n  async _error(error) {\n    try {\n      for (const hook of this.options.hooks.beforeError) {\n        // eslint-disable-next-line no-await-in-loop\n        error = await hook(error);\n      }\n    } catch (error_) {\n      error = new RequestError(error_.message, error_, this);\n    }\n    this.destroy(error);\n  }\n  _beforeError(error) {\n    if (this[kStopReading]) {\n      return;\n    }\n    const {\n      options\n    } = this;\n    const retryCount = this.retryCount + 1;\n    this[kStopReading] = true;\n    if (!(error instanceof RequestError)) {\n      error = new RequestError(error.message, error, this);\n    }\n    const typedError = error;\n    const {\n      response\n    } = typedError;\n    void (async () => {\n      if (response && !response.body) {\n        response.setEncoding(this._readableState.encoding);\n        try {\n          response.rawBody = await get_buffer_1.default(response);\n          response.body = response.rawBody.toString();\n        } catch (_a) {}\n      }\n      if (this.listenerCount('retry') !== 0) {\n        let backoff;\n        try {\n          let retryAfter;\n          if (response && 'retry-after' in response.headers) {\n            retryAfter = Number(response.headers['retry-after']);\n            if (Number.isNaN(retryAfter)) {\n              retryAfter = Date.parse(response.headers['retry-after']) - Date.now();\n              if (retryAfter <= 0) {\n                retryAfter = 1;\n              }\n            } else {\n              retryAfter *= 1000;\n            }\n          }\n          backoff = await options.retry.calculateDelay({\n            attemptCount: retryCount,\n            retryOptions: options.retry,\n            error: typedError,\n            retryAfter,\n            computedValue: calculate_retry_delay_1.default({\n              attemptCount: retryCount,\n              retryOptions: options.retry,\n              error: typedError,\n              retryAfter,\n              computedValue: 0\n            })\n          });\n        } catch (error_) {\n          void this._error(new RequestError(error_.message, error_, this));\n          return;\n        }\n        if (backoff) {\n          const retry = async () => {\n            try {\n              for (const hook of this.options.hooks.beforeRetry) {\n                // eslint-disable-next-line no-await-in-loop\n                await hook(this.options, typedError, retryCount);\n              }\n            } catch (error_) {\n              void this._error(new RequestError(error_.message, error, this));\n              return;\n            }\n            // Something forced us to abort the retry\n            if (this.destroyed) {\n              return;\n            }\n            this.destroy();\n            this.emit('retry', retryCount, error);\n          };\n          this[kRetryTimeout] = setTimeout(retry, backoff);\n          return;\n        }\n      }\n      void this._error(typedError);\n    })();\n  }\n  _read() {\n    this[kTriggerRead] = true;\n    const response = this[kResponse];\n    if (response && !this[kStopReading]) {\n      // We cannot put this in the `if` above\n      // because `.read()` also triggers the `end` event\n      if (response.readableLength) {\n        this[kTriggerRead] = false;\n      }\n      let data;\n      while ((data = response.read()) !== null) {\n        this[kDownloadedSize] += data.length;\n        this[kStartedReading] = true;\n        const progress = this.downloadProgress;\n        if (progress.percent < 1) {\n          this.emit('downloadProgress', progress);\n        }\n        this.push(data);\n      }\n    }\n  }\n  // Node.js 12 has incorrect types, so the encoding must be a string\n  _write(chunk, encoding, callback) {\n    const write = () => {\n      this._writeRequest(chunk, encoding, callback);\n    };\n    if (this.requestInitialized) {\n      write();\n    } else {\n      this[kJobs].push(write);\n    }\n  }\n  _writeRequest(chunk, encoding, callback) {\n    if (this[kRequest].destroyed) {\n      // Probably the `ClientRequest` instance will throw\n      return;\n    }\n    this._progressCallbacks.push(() => {\n      this[kUploadedSize] += Buffer.byteLength(chunk, encoding);\n      const progress = this.uploadProgress;\n      if (progress.percent < 1) {\n        this.emit('uploadProgress', progress);\n      }\n    });\n    // TODO: What happens if it's from cache? Then this[kRequest] won't be defined.\n    this[kRequest].write(chunk, encoding, error => {\n      if (!error && this._progressCallbacks.length > 0) {\n        this._progressCallbacks.shift()();\n      }\n      callback(error);\n    });\n  }\n  _final(callback) {\n    const endRequest = () => {\n      // FIX: Node.js 10 calls the write callback AFTER the end callback!\n      while (this._progressCallbacks.length !== 0) {\n        this._progressCallbacks.shift()();\n      }\n      // We need to check if `this[kRequest]` is present,\n      // because it isn't when we use cache.\n      if (!(kRequest in this)) {\n        callback();\n        return;\n      }\n      if (this[kRequest].destroyed) {\n        callback();\n        return;\n      }\n      this[kRequest].end(error => {\n        if (!error) {\n          this[kBodySize] = this[kUploadedSize];\n          this.emit('uploadProgress', this.uploadProgress);\n          this[kRequest].emit('upload-complete');\n        }\n        callback(error);\n      });\n    };\n    if (this.requestInitialized) {\n      endRequest();\n    } else {\n      this[kJobs].push(endRequest);\n    }\n  }\n  _destroy(error, callback) {\n    var _a;\n    this[kStopReading] = true;\n    // Prevent further retries\n    clearTimeout(this[kRetryTimeout]);\n    if (kRequest in this) {\n      this[kCancelTimeouts]();\n      // TODO: Remove the next `if` when these get fixed:\n      // - https://github.com/nodejs/node/issues/32851\n      if (!((_a = this[kResponse]) === null || _a === void 0 ? void 0 : _a.complete)) {\n        this[kRequest].destroy();\n      }\n    }\n    if (error !== null && !is_1.default.undefined(error) && !(error instanceof RequestError)) {\n      error = new RequestError(error.message, error, this);\n    }\n    callback(error);\n  }\n  get _isAboutToError() {\n    return this[kStopReading];\n  }\n  /**\n  The remote IP address.\n  */\n  get ip() {\n    var _a;\n    return (_a = this.socket) === null || _a === void 0 ? void 0 : _a.remoteAddress;\n  }\n  /**\n  Indicates whether the request has been aborted or not.\n  */\n  get aborted() {\n    var _a, _b, _c;\n    return ((_b = (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.destroyed) !== null && _b !== void 0 ? _b : this.destroyed) && !((_c = this[kOriginalResponse]) === null || _c === void 0 ? void 0 : _c.complete);\n  }\n  get socket() {\n    var _a, _b;\n    return (_b = (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.socket) !== null && _b !== void 0 ? _b : undefined;\n  }\n  /**\n  Progress event for downloading (receiving a response).\n  */\n  get downloadProgress() {\n    let percent;\n    if (this[kResponseSize]) {\n      percent = this[kDownloadedSize] / this[kResponseSize];\n    } else if (this[kResponseSize] === this[kDownloadedSize]) {\n      percent = 1;\n    } else {\n      percent = 0;\n    }\n    return {\n      percent,\n      transferred: this[kDownloadedSize],\n      total: this[kResponseSize]\n    };\n  }\n  /**\n  Progress event for uploading (sending a request).\n  */\n  get uploadProgress() {\n    let percent;\n    if (this[kBodySize]) {\n      percent = this[kUploadedSize] / this[kBodySize];\n    } else if (this[kBodySize] === this[kUploadedSize]) {\n      percent = 1;\n    } else {\n      percent = 0;\n    }\n    return {\n      percent,\n      transferred: this[kUploadedSize],\n      total: this[kBodySize]\n    };\n  }\n  /**\n  The object contains the following properties:\n   - `start` - Time when the request started.\n  - `socket` - Time when a socket was assigned to the request.\n  - `lookup` - Time when the DNS lookup finished.\n  - `connect` - Time when the socket successfully connected.\n  - `secureConnect` - Time when the socket securely connected.\n  - `upload` - Time when the request finished uploading.\n  - `response` - Time when the request fired `response` event.\n  - `end` - Time when the response fired `end` event.\n  - `error` - Time when the request fired `error` event.\n  - `abort` - Time when the request fired `abort` event.\n  - `phases`\n      - `wait` - `timings.socket - timings.start`\n      - `dns` - `timings.lookup - timings.socket`\n      - `tcp` - `timings.connect - timings.lookup`\n      - `tls` - `timings.secureConnect - timings.connect`\n      - `request` - `timings.upload - (timings.secureConnect || timings.connect)`\n      - `firstByte` - `timings.response - timings.upload`\n      - `download` - `timings.end - timings.response`\n      - `total` - `(timings.end || timings.error || timings.abort) - timings.start`\n   If something has not been measured yet, it will be `undefined`.\n   __Note__: The time is a `number` representing the milliseconds elapsed since the UNIX epoch.\n  */\n  get timings() {\n    var _a;\n    return (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.timings;\n  }\n  /**\n  Whether the response was retrieved from the cache.\n  */\n  get isFromCache() {\n    return this[kIsFromCache];\n  }\n  pipe(destination, options) {\n    if (this[kStartedReading]) {\n      throw new Error('Failed to pipe. The response has been emitted already.');\n    }\n    if (destination instanceof http_1.ServerResponse) {\n      this[kServerResponsesPiped].add(destination);\n    }\n    return super.pipe(destination, options);\n  }\n  unpipe(destination) {\n    if (destination instanceof http_1.ServerResponse) {\n      this[kServerResponsesPiped].delete(destination);\n    }\n    super.unpipe(destination);\n    return this;\n  }\n}\nexports.default = Request;","map":{"version":3,"names":["Object","defineProperty","exports","value","UnsupportedProtocolError","ReadError","TimeoutError","UploadError","CacheError","HTTPError","MaxRedirectsError","RequestError","setNonEnumerableProperties","knownHookEvents","withoutBody","kIsNormalizedAlready","util_1","require","stream_1","fs_1","url_1","http","http_1","https","http_timer_1","cacheable_lookup_1","CacheableRequest","decompressResponse","http2wrapper","lowercaseKeys","is_1","get_body_size_1","is_form_data_1","proxy_events_1","timed_out_1","url_to_options_1","options_to_url_1","weakable_map_1","get_buffer_1","dns_ip_version_1","is_response_ok_1","deprecation_warning_1","normalize_arguments_1","calculate_retry_delay_1","globalDnsCache","kRequest","Symbol","kResponse","kResponseSize","kDownloadedSize","kBodySize","kUploadedSize","kServerResponsesPiped","kUnproxyEvents","kIsFromCache","kCancelTimeouts","kStartedReading","kStopReading","kTriggerRead","kBody","kJobs","kOriginalResponse","kRetryTimeout","supportsBrotli","default","string","process","versions","brotli","Set","validateSearchParameters","searchParameters","key","number","boolean","null_","undefined","TypeError","String","isClientRequest","clientRequest","object","cacheableStore","waitForOpenFile","file","Promise","resolve","reject","onError","error","pending","once","off","redirectCodes","nonEnumerableProperties","sources","to","properties","source","name","writable","configurable","enumerable","defineProperties","Error","constructor","message","self","_a","_b","captureStackTrace","code","Request","options","timings","request","stack","indexOfMessage","indexOf","length","thisStackTrace","slice","split","reverse","errorStackTrace","shift","join","maxRedirects","response","statusCode","statusMessage","event","url","protocol","proxiedRequestEvents","Duplex","defaults","autoDestroy","highWaterMark","requestInitialized","redirects","retryCount","_progressCallbacks","unlockWrite","_unlockWrite","lockWrite","_lockWrite","on","prependListener","IncomingMessage","headers","json","body","form","normalizeArguments","nodeStream","destroy","ReadStream","normalizedURL","requestUrl","toString","decodeURI","_finalizeBody","_makeRequest","destroyed","job","_beforeError","_c","_d","_e","rawOptions","urlInstance","URL","cache","dnsCache","assert","any","method","prefixUrl","cookieJar","searchParams","timeout","context","hooks","decompress","ignoreInvalidCookies","followRedirect","throwHttpErrors","http2","allowGetBody","localAddress","isDnsLookupIpVersion","dnsLookupIpVersion","rejectUnauthorized","function_","checkServerIdentity","array","certificateAuthority","certificate","passphrase","buffer","pfx","cacheOptions","toUpperCase","URLSearchParams","append","forEach","has","username","password","endsWith","startsWith","port","set","href","get","pathname","search","setCookie","getCookieString","promisify","bind","requestOptions","handler","result","promise","catch","lookup","areHooksDefault","defaultHooks","agent","onLockedWrite","write","end","isForm","isJSON","isBody","hasPayload","cannotHaveBody","_cannotHaveBody","filter","isTrue","Readable","noContentType","getBoundary","stringifyJson","uploadBodySize","Number","_onResponseBase","typedResponse","STATUS_CODES","redirectUrls","isFromCache","fromCache","ip","emit","downloadProgress","rawCookies","promises","map","rawCookie","p","all","location","resume","shouldBeGet","methodRewriting","redirectBuffer","Buffer","from","redirectUrl","redirectString","isUnixSocketURL","hostname","host","cookie","authorization","push","hook","beforeRedirect","isStream","isResponseOk","_read","pause","destination","headersSent","isAllowed","setHeader","_onResponse","_onRequest","responseEventName","res","removeAllListeners","uploadProgress","currentRequest","pipe","_writeRequest","_noPipe","_createCacheableRequest","assign","cacheRequest","_readableState","requestOrPromise","cookieString","nonEmptyString","beforeRequest","matches","exec","groups","socketPath","path","isHttps","fallbackFn","auto","realFn","fn","shared","cacheHeuristic","immutableMinTimeToLive","ignoreCargoCult","family","dnsLookupIpVersionToFamily","_f","ca","cert","requestOrResponse","_error","beforeError","error_","typedError","setEncoding","encoding","rawBody","listenerCount","backoff","retryAfter","isNaN","Date","parse","now","retry","calculateDelay","attemptCount","retryOptions","computedValue","beforeRetry","setTimeout","readableLength","data","read","progress","percent","_write","chunk","callback","byteLength","_final","endRequest","_destroy","clearTimeout","complete","_isAboutToError","socket","remoteAddress","aborted","transferred","total","ServerResponse","add","unpipe","delete"],"sources":["/home/spartan/Documents/vue.js/demo/node_modules/got/dist/source/core/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnsupportedProtocolError = exports.ReadError = exports.TimeoutError = exports.UploadError = exports.CacheError = exports.HTTPError = exports.MaxRedirectsError = exports.RequestError = exports.setNonEnumerableProperties = exports.knownHookEvents = exports.withoutBody = exports.kIsNormalizedAlready = void 0;\nconst util_1 = require(\"util\");\nconst stream_1 = require(\"stream\");\nconst fs_1 = require(\"fs\");\nconst url_1 = require(\"url\");\nconst http = require(\"http\");\nconst http_1 = require(\"http\");\nconst https = require(\"https\");\nconst http_timer_1 = require(\"@szmarczak/http-timer\");\nconst cacheable_lookup_1 = require(\"cacheable-lookup\");\nconst CacheableRequest = require(\"cacheable-request\");\nconst decompressResponse = require(\"decompress-response\");\n// @ts-expect-error Missing types\nconst http2wrapper = require(\"http2-wrapper\");\nconst lowercaseKeys = require(\"lowercase-keys\");\nconst is_1 = require(\"@sindresorhus/is\");\nconst get_body_size_1 = require(\"./utils/get-body-size\");\nconst is_form_data_1 = require(\"./utils/is-form-data\");\nconst proxy_events_1 = require(\"./utils/proxy-events\");\nconst timed_out_1 = require(\"./utils/timed-out\");\nconst url_to_options_1 = require(\"./utils/url-to-options\");\nconst options_to_url_1 = require(\"./utils/options-to-url\");\nconst weakable_map_1 = require(\"./utils/weakable-map\");\nconst get_buffer_1 = require(\"./utils/get-buffer\");\nconst dns_ip_version_1 = require(\"./utils/dns-ip-version\");\nconst is_response_ok_1 = require(\"./utils/is-response-ok\");\nconst deprecation_warning_1 = require(\"../utils/deprecation-warning\");\nconst normalize_arguments_1 = require(\"../as-promise/normalize-arguments\");\nconst calculate_retry_delay_1 = require(\"./calculate-retry-delay\");\nlet globalDnsCache;\nconst kRequest = Symbol('request');\nconst kResponse = Symbol('response');\nconst kResponseSize = Symbol('responseSize');\nconst kDownloadedSize = Symbol('downloadedSize');\nconst kBodySize = Symbol('bodySize');\nconst kUploadedSize = Symbol('uploadedSize');\nconst kServerResponsesPiped = Symbol('serverResponsesPiped');\nconst kUnproxyEvents = Symbol('unproxyEvents');\nconst kIsFromCache = Symbol('isFromCache');\nconst kCancelTimeouts = Symbol('cancelTimeouts');\nconst kStartedReading = Symbol('startedReading');\nconst kStopReading = Symbol('stopReading');\nconst kTriggerRead = Symbol('triggerRead');\nconst kBody = Symbol('body');\nconst kJobs = Symbol('jobs');\nconst kOriginalResponse = Symbol('originalResponse');\nconst kRetryTimeout = Symbol('retryTimeout');\nexports.kIsNormalizedAlready = Symbol('isNormalizedAlready');\nconst supportsBrotli = is_1.default.string(process.versions.brotli);\nexports.withoutBody = new Set(['GET', 'HEAD']);\nexports.knownHookEvents = [\n    'init',\n    'beforeRequest',\n    'beforeRedirect',\n    'beforeError',\n    'beforeRetry',\n    // Promise-Only\n    'afterResponse'\n];\nfunction validateSearchParameters(searchParameters) {\n    // eslint-disable-next-line guard-for-in\n    for (const key in searchParameters) {\n        const value = searchParameters[key];\n        if (!is_1.default.string(value) && !is_1.default.number(value) && !is_1.default.boolean(value) && !is_1.default.null_(value) && !is_1.default.undefined(value)) {\n            throw new TypeError(`The \\`searchParams\\` value '${String(value)}' must be a string, number, boolean or null`);\n        }\n    }\n}\nfunction isClientRequest(clientRequest) {\n    return is_1.default.object(clientRequest) && !('statusCode' in clientRequest);\n}\nconst cacheableStore = new weakable_map_1.default();\nconst waitForOpenFile = async (file) => new Promise((resolve, reject) => {\n    const onError = (error) => {\n        reject(error);\n    };\n    // Node.js 12 has incomplete types\n    if (!file.pending) {\n        resolve();\n    }\n    file.once('error', onError);\n    file.once('ready', () => {\n        file.off('error', onError);\n        resolve();\n    });\n});\nconst redirectCodes = new Set([300, 301, 302, 303, 304, 307, 308]);\nconst nonEnumerableProperties = [\n    'context',\n    'body',\n    'json',\n    'form'\n];\nexports.setNonEnumerableProperties = (sources, to) => {\n    // Non enumerable properties shall not be merged\n    const properties = {};\n    for (const source of sources) {\n        if (!source) {\n            continue;\n        }\n        for (const name of nonEnumerableProperties) {\n            if (!(name in source)) {\n                continue;\n            }\n            properties[name] = {\n                writable: true,\n                configurable: true,\n                enumerable: false,\n                // @ts-expect-error TS doesn't see the check above\n                value: source[name]\n            };\n        }\n    }\n    Object.defineProperties(to, properties);\n};\n/**\nAn error to be thrown when a request fails.\nContains a `code` property with error class code, like `ECONNREFUSED`.\n*/\nclass RequestError extends Error {\n    constructor(message, error, self) {\n        var _a, _b;\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = 'RequestError';\n        this.code = (_a = error.code) !== null && _a !== void 0 ? _a : 'ERR_GOT_REQUEST_ERROR';\n        if (self instanceof Request) {\n            Object.defineProperty(this, 'request', {\n                enumerable: false,\n                value: self\n            });\n            Object.defineProperty(this, 'response', {\n                enumerable: false,\n                value: self[kResponse]\n            });\n            Object.defineProperty(this, 'options', {\n                // This fails because of TS 3.7.2 useDefineForClassFields\n                // Ref: https://github.com/microsoft/TypeScript/issues/34972\n                enumerable: false,\n                value: self.options\n            });\n        }\n        else {\n            Object.defineProperty(this, 'options', {\n                // This fails because of TS 3.7.2 useDefineForClassFields\n                // Ref: https://github.com/microsoft/TypeScript/issues/34972\n                enumerable: false,\n                value: self\n            });\n        }\n        this.timings = (_b = this.request) === null || _b === void 0 ? void 0 : _b.timings;\n        // Recover the original stacktrace\n        if (is_1.default.string(error.stack) && is_1.default.string(this.stack)) {\n            const indexOfMessage = this.stack.indexOf(this.message) + this.message.length;\n            const thisStackTrace = this.stack.slice(indexOfMessage).split('\\n').reverse();\n            const errorStackTrace = error.stack.slice(error.stack.indexOf(error.message) + error.message.length).split('\\n').reverse();\n            // Remove duplicated traces\n            while (errorStackTrace.length !== 0 && errorStackTrace[0] === thisStackTrace[0]) {\n                thisStackTrace.shift();\n            }\n            this.stack = `${this.stack.slice(0, indexOfMessage)}${thisStackTrace.reverse().join('\\n')}${errorStackTrace.reverse().join('\\n')}`;\n        }\n    }\n}\nexports.RequestError = RequestError;\n/**\nAn error to be thrown when the server redirects you more than ten times.\nIncludes a `response` property.\n*/\nclass MaxRedirectsError extends RequestError {\n    constructor(request) {\n        super(`Redirected ${request.options.maxRedirects} times. Aborting.`, {}, request);\n        this.name = 'MaxRedirectsError';\n        this.code = 'ERR_TOO_MANY_REDIRECTS';\n    }\n}\nexports.MaxRedirectsError = MaxRedirectsError;\n/**\nAn error to be thrown when the server response code is not 2xx nor 3xx if `options.followRedirect` is `true`, but always except for 304.\nIncludes a `response` property.\n*/\nclass HTTPError extends RequestError {\n    constructor(response) {\n        super(`Response code ${response.statusCode} (${response.statusMessage})`, {}, response.request);\n        this.name = 'HTTPError';\n        this.code = 'ERR_NON_2XX_3XX_RESPONSE';\n    }\n}\nexports.HTTPError = HTTPError;\n/**\nAn error to be thrown when a cache method fails.\nFor example, if the database goes down or there's a filesystem error.\n*/\nclass CacheError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'CacheError';\n        this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_CACHE_ACCESS' : this.code;\n    }\n}\nexports.CacheError = CacheError;\n/**\nAn error to be thrown when the request body is a stream and an error occurs while reading from that stream.\n*/\nclass UploadError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'UploadError';\n        this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_UPLOAD' : this.code;\n    }\n}\nexports.UploadError = UploadError;\n/**\nAn error to be thrown when the request is aborted due to a timeout.\nIncludes an `event` and `timings` property.\n*/\nclass TimeoutError extends RequestError {\n    constructor(error, timings, request) {\n        super(error.message, error, request);\n        this.name = 'TimeoutError';\n        this.event = error.event;\n        this.timings = timings;\n    }\n}\nexports.TimeoutError = TimeoutError;\n/**\nAn error to be thrown when reading from response stream fails.\n*/\nclass ReadError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'ReadError';\n        this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_READING_RESPONSE_STREAM' : this.code;\n    }\n}\nexports.ReadError = ReadError;\n/**\nAn error to be thrown when given an unsupported protocol.\n*/\nclass UnsupportedProtocolError extends RequestError {\n    constructor(options) {\n        super(`Unsupported protocol \"${options.url.protocol}\"`, {}, options);\n        this.name = 'UnsupportedProtocolError';\n        this.code = 'ERR_UNSUPPORTED_PROTOCOL';\n    }\n}\nexports.UnsupportedProtocolError = UnsupportedProtocolError;\nconst proxiedRequestEvents = [\n    'socket',\n    'connect',\n    'continue',\n    'information',\n    'upgrade',\n    'timeout'\n];\nclass Request extends stream_1.Duplex {\n    constructor(url, options = {}, defaults) {\n        super({\n            // This must be false, to enable throwing after destroy\n            // It is used for retry logic in Promise API\n            autoDestroy: false,\n            // It needs to be zero because we're just proxying the data to another stream\n            highWaterMark: 0\n        });\n        this[kDownloadedSize] = 0;\n        this[kUploadedSize] = 0;\n        this.requestInitialized = false;\n        this[kServerResponsesPiped] = new Set();\n        this.redirects = [];\n        this[kStopReading] = false;\n        this[kTriggerRead] = false;\n        this[kJobs] = [];\n        this.retryCount = 0;\n        // TODO: Remove this when targeting Node.js >= 12\n        this._progressCallbacks = [];\n        const unlockWrite = () => this._unlockWrite();\n        const lockWrite = () => this._lockWrite();\n        this.on('pipe', (source) => {\n            source.prependListener('data', unlockWrite);\n            source.on('data', lockWrite);\n            source.prependListener('end', unlockWrite);\n            source.on('end', lockWrite);\n        });\n        this.on('unpipe', (source) => {\n            source.off('data', unlockWrite);\n            source.off('data', lockWrite);\n            source.off('end', unlockWrite);\n            source.off('end', lockWrite);\n        });\n        this.on('pipe', source => {\n            if (source instanceof http_1.IncomingMessage) {\n                this.options.headers = {\n                    ...source.headers,\n                    ...this.options.headers\n                };\n            }\n        });\n        const { json, body, form } = options;\n        if (json || body || form) {\n            this._lockWrite();\n        }\n        if (exports.kIsNormalizedAlready in options) {\n            this.options = options;\n        }\n        else {\n            try {\n                // @ts-expect-error Common TypeScript bug saying that `this.constructor` is not accessible\n                this.options = this.constructor.normalizeArguments(url, options, defaults);\n            }\n            catch (error) {\n                // TODO: Move this to `_destroy()`\n                if (is_1.default.nodeStream(options.body)) {\n                    options.body.destroy();\n                }\n                this.destroy(error);\n                return;\n            }\n        }\n        (async () => {\n            var _a;\n            try {\n                if (this.options.body instanceof fs_1.ReadStream) {\n                    await waitForOpenFile(this.options.body);\n                }\n                const { url: normalizedURL } = this.options;\n                if (!normalizedURL) {\n                    throw new TypeError('Missing `url` property');\n                }\n                this.requestUrl = normalizedURL.toString();\n                decodeURI(this.requestUrl);\n                await this._finalizeBody();\n                await this._makeRequest();\n                if (this.destroyed) {\n                    (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.destroy();\n                    return;\n                }\n                // Queued writes etc.\n                for (const job of this[kJobs]) {\n                    job();\n                }\n                // Prevent memory leak\n                this[kJobs].length = 0;\n                this.requestInitialized = true;\n            }\n            catch (error) {\n                if (error instanceof RequestError) {\n                    this._beforeError(error);\n                    return;\n                }\n                // This is a workaround for https://github.com/nodejs/node/issues/33335\n                if (!this.destroyed) {\n                    this.destroy(error);\n                }\n            }\n        })();\n    }\n    static normalizeArguments(url, options, defaults) {\n        var _a, _b, _c, _d, _e;\n        const rawOptions = options;\n        if (is_1.default.object(url) && !is_1.default.urlInstance(url)) {\n            options = { ...defaults, ...url, ...options };\n        }\n        else {\n            if (url && options && options.url !== undefined) {\n                throw new TypeError('The `url` option is mutually exclusive with the `input` argument');\n            }\n            options = { ...defaults, ...options };\n            if (url !== undefined) {\n                options.url = url;\n            }\n            if (is_1.default.urlInstance(options.url)) {\n                options.url = new url_1.URL(options.url.toString());\n            }\n        }\n        // TODO: Deprecate URL options in Got 12.\n        // Support extend-specific options\n        if (options.cache === false) {\n            options.cache = undefined;\n        }\n        if (options.dnsCache === false) {\n            options.dnsCache = undefined;\n        }\n        // Nice type assertions\n        is_1.assert.any([is_1.default.string, is_1.default.undefined], options.method);\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.headers);\n        is_1.assert.any([is_1.default.string, is_1.default.urlInstance, is_1.default.undefined], options.prefixUrl);\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.cookieJar);\n        is_1.assert.any([is_1.default.object, is_1.default.string, is_1.default.undefined], options.searchParams);\n        is_1.assert.any([is_1.default.object, is_1.default.string, is_1.default.undefined], options.cache);\n        is_1.assert.any([is_1.default.object, is_1.default.number, is_1.default.undefined], options.timeout);\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.context);\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.hooks);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.decompress);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.ignoreInvalidCookies);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.followRedirect);\n        is_1.assert.any([is_1.default.number, is_1.default.undefined], options.maxRedirects);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.throwHttpErrors);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.http2);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.allowGetBody);\n        is_1.assert.any([is_1.default.string, is_1.default.undefined], options.localAddress);\n        is_1.assert.any([dns_ip_version_1.isDnsLookupIpVersion, is_1.default.undefined], options.dnsLookupIpVersion);\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.https);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.rejectUnauthorized);\n        if (options.https) {\n            is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.https.rejectUnauthorized);\n            is_1.assert.any([is_1.default.function_, is_1.default.undefined], options.https.checkServerIdentity);\n            is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.certificateAuthority);\n            is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.key);\n            is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.certificate);\n            is_1.assert.any([is_1.default.string, is_1.default.undefined], options.https.passphrase);\n            is_1.assert.any([is_1.default.string, is_1.default.buffer, is_1.default.array, is_1.default.undefined], options.https.pfx);\n        }\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.cacheOptions);\n        // `options.method`\n        if (is_1.default.string(options.method)) {\n            options.method = options.method.toUpperCase();\n        }\n        else {\n            options.method = 'GET';\n        }\n        // `options.headers`\n        if (options.headers === (defaults === null || defaults === void 0 ? void 0 : defaults.headers)) {\n            options.headers = { ...options.headers };\n        }\n        else {\n            options.headers = lowercaseKeys({ ...(defaults === null || defaults === void 0 ? void 0 : defaults.headers), ...options.headers });\n        }\n        // Disallow legacy `url.Url`\n        if ('slashes' in options) {\n            throw new TypeError('The legacy `url.Url` has been deprecated. Use `URL` instead.');\n        }\n        // `options.auth`\n        if ('auth' in options) {\n            throw new TypeError('Parameter `auth` is deprecated. Use `username` / `password` instead.');\n        }\n        // `options.searchParams`\n        if ('searchParams' in options) {\n            if (options.searchParams && options.searchParams !== (defaults === null || defaults === void 0 ? void 0 : defaults.searchParams)) {\n                let searchParameters;\n                if (is_1.default.string(options.searchParams) || (options.searchParams instanceof url_1.URLSearchParams)) {\n                    searchParameters = new url_1.URLSearchParams(options.searchParams);\n                }\n                else {\n                    validateSearchParameters(options.searchParams);\n                    searchParameters = new url_1.URLSearchParams();\n                    // eslint-disable-next-line guard-for-in\n                    for (const key in options.searchParams) {\n                        const value = options.searchParams[key];\n                        if (value === null) {\n                            searchParameters.append(key, '');\n                        }\n                        else if (value !== undefined) {\n                            searchParameters.append(key, value);\n                        }\n                    }\n                }\n                // `normalizeArguments()` is also used to merge options\n                (_a = defaults === null || defaults === void 0 ? void 0 : defaults.searchParams) === null || _a === void 0 ? void 0 : _a.forEach((value, key) => {\n                    // Only use default if one isn't already defined\n                    if (!searchParameters.has(key)) {\n                        searchParameters.append(key, value);\n                    }\n                });\n                options.searchParams = searchParameters;\n            }\n        }\n        // `options.username` & `options.password`\n        options.username = (_b = options.username) !== null && _b !== void 0 ? _b : '';\n        options.password = (_c = options.password) !== null && _c !== void 0 ? _c : '';\n        // `options.prefixUrl` & `options.url`\n        if (is_1.default.undefined(options.prefixUrl)) {\n            options.prefixUrl = (_d = defaults === null || defaults === void 0 ? void 0 : defaults.prefixUrl) !== null && _d !== void 0 ? _d : '';\n        }\n        else {\n            options.prefixUrl = options.prefixUrl.toString();\n            if (options.prefixUrl !== '' && !options.prefixUrl.endsWith('/')) {\n                options.prefixUrl += '/';\n            }\n        }\n        if (is_1.default.string(options.url)) {\n            if (options.url.startsWith('/')) {\n                throw new Error('`input` must not start with a slash when using `prefixUrl`');\n            }\n            options.url = options_to_url_1.default(options.prefixUrl + options.url, options);\n        }\n        else if ((is_1.default.undefined(options.url) && options.prefixUrl !== '') || options.protocol) {\n            options.url = options_to_url_1.default(options.prefixUrl, options);\n        }\n        if (options.url) {\n            if ('port' in options) {\n                delete options.port;\n            }\n            // Make it possible to change `options.prefixUrl`\n            let { prefixUrl } = options;\n            Object.defineProperty(options, 'prefixUrl', {\n                set: (value) => {\n                    const url = options.url;\n                    if (!url.href.startsWith(value)) {\n                        throw new Error(`Cannot change \\`prefixUrl\\` from ${prefixUrl} to ${value}: ${url.href}`);\n                    }\n                    options.url = new url_1.URL(value + url.href.slice(prefixUrl.length));\n                    prefixUrl = value;\n                },\n                get: () => prefixUrl\n            });\n            // Support UNIX sockets\n            let { protocol } = options.url;\n            if (protocol === 'unix:') {\n                protocol = 'http:';\n                options.url = new url_1.URL(`http://unix${options.url.pathname}${options.url.search}`);\n            }\n            // Set search params\n            if (options.searchParams) {\n                // eslint-disable-next-line @typescript-eslint/no-base-to-string\n                options.url.search = options.searchParams.toString();\n            }\n            // Protocol check\n            if (protocol !== 'http:' && protocol !== 'https:') {\n                throw new UnsupportedProtocolError(options);\n            }\n            // Update `username`\n            if (options.username === '') {\n                options.username = options.url.username;\n            }\n            else {\n                options.url.username = options.username;\n            }\n            // Update `password`\n            if (options.password === '') {\n                options.password = options.url.password;\n            }\n            else {\n                options.url.password = options.password;\n            }\n        }\n        // `options.cookieJar`\n        const { cookieJar } = options;\n        if (cookieJar) {\n            let { setCookie, getCookieString } = cookieJar;\n            is_1.assert.function_(setCookie);\n            is_1.assert.function_(getCookieString);\n            /* istanbul ignore next: Horrible `tough-cookie` v3 check */\n            if (setCookie.length === 4 && getCookieString.length === 0) {\n                setCookie = util_1.promisify(setCookie.bind(options.cookieJar));\n                getCookieString = util_1.promisify(getCookieString.bind(options.cookieJar));\n                options.cookieJar = {\n                    setCookie,\n                    getCookieString: getCookieString\n                };\n            }\n        }\n        // `options.cache`\n        const { cache } = options;\n        if (cache) {\n            if (!cacheableStore.has(cache)) {\n                cacheableStore.set(cache, new CacheableRequest(((requestOptions, handler) => {\n                    const result = requestOptions[kRequest](requestOptions, handler);\n                    // TODO: remove this when `cacheable-request` supports async request functions.\n                    if (is_1.default.promise(result)) {\n                        // @ts-expect-error\n                        // We only need to implement the error handler in order to support HTTP2 caching.\n                        // The result will be a promise anyway.\n                        result.once = (event, handler) => {\n                            if (event === 'error') {\n                                result.catch(handler);\n                            }\n                            else if (event === 'abort') {\n                                // The empty catch is needed here in case when\n                                // it rejects before it's `await`ed in `_makeRequest`.\n                                (async () => {\n                                    try {\n                                        const request = (await result);\n                                        request.once('abort', handler);\n                                    }\n                                    catch (_a) { }\n                                })();\n                            }\n                            else {\n                                /* istanbul ignore next: safety check */\n                                throw new Error(`Unknown HTTP2 promise event: ${event}`);\n                            }\n                            return result;\n                        };\n                    }\n                    return result;\n                }), cache));\n            }\n        }\n        // `options.cacheOptions`\n        options.cacheOptions = { ...options.cacheOptions };\n        // `options.dnsCache`\n        if (options.dnsCache === true) {\n            if (!globalDnsCache) {\n                globalDnsCache = new cacheable_lookup_1.default();\n            }\n            options.dnsCache = globalDnsCache;\n        }\n        else if (!is_1.default.undefined(options.dnsCache) && !options.dnsCache.lookup) {\n            throw new TypeError(`Parameter \\`dnsCache\\` must be a CacheableLookup instance or a boolean, got ${is_1.default(options.dnsCache)}`);\n        }\n        // `options.timeout`\n        if (is_1.default.number(options.timeout)) {\n            options.timeout = { request: options.timeout };\n        }\n        else if (defaults && options.timeout !== defaults.timeout) {\n            options.timeout = {\n                ...defaults.timeout,\n                ...options.timeout\n            };\n        }\n        else {\n            options.timeout = { ...options.timeout };\n        }\n        // `options.context`\n        if (!options.context) {\n            options.context = {};\n        }\n        // `options.hooks`\n        const areHooksDefault = options.hooks === (defaults === null || defaults === void 0 ? void 0 : defaults.hooks);\n        options.hooks = { ...options.hooks };\n        for (const event of exports.knownHookEvents) {\n            if (event in options.hooks) {\n                if (is_1.default.array(options.hooks[event])) {\n                    // See https://github.com/microsoft/TypeScript/issues/31445#issuecomment-576929044\n                    options.hooks[event] = [...options.hooks[event]];\n                }\n                else {\n                    throw new TypeError(`Parameter \\`${event}\\` must be an Array, got ${is_1.default(options.hooks[event])}`);\n                }\n            }\n            else {\n                options.hooks[event] = [];\n            }\n        }\n        if (defaults && !areHooksDefault) {\n            for (const event of exports.knownHookEvents) {\n                const defaultHooks = defaults.hooks[event];\n                if (defaultHooks.length > 0) {\n                    // See https://github.com/microsoft/TypeScript/issues/31445#issuecomment-576929044\n                    options.hooks[event] = [\n                        ...defaults.hooks[event],\n                        ...options.hooks[event]\n                    ];\n                }\n            }\n        }\n        // DNS options\n        if ('family' in options) {\n            deprecation_warning_1.default('\"options.family\" was never documented, please use \"options.dnsLookupIpVersion\"');\n        }\n        // HTTPS options\n        if (defaults === null || defaults === void 0 ? void 0 : defaults.https) {\n            options.https = { ...defaults.https, ...options.https };\n        }\n        if ('rejectUnauthorized' in options) {\n            deprecation_warning_1.default('\"options.rejectUnauthorized\" is now deprecated, please use \"options.https.rejectUnauthorized\"');\n        }\n        if ('checkServerIdentity' in options) {\n            deprecation_warning_1.default('\"options.checkServerIdentity\" was never documented, please use \"options.https.checkServerIdentity\"');\n        }\n        if ('ca' in options) {\n            deprecation_warning_1.default('\"options.ca\" was never documented, please use \"options.https.certificateAuthority\"');\n        }\n        if ('key' in options) {\n            deprecation_warning_1.default('\"options.key\" was never documented, please use \"options.https.key\"');\n        }\n        if ('cert' in options) {\n            deprecation_warning_1.default('\"options.cert\" was never documented, please use \"options.https.certificate\"');\n        }\n        if ('passphrase' in options) {\n            deprecation_warning_1.default('\"options.passphrase\" was never documented, please use \"options.https.passphrase\"');\n        }\n        if ('pfx' in options) {\n            deprecation_warning_1.default('\"options.pfx\" was never documented, please use \"options.https.pfx\"');\n        }\n        // Other options\n        if ('followRedirects' in options) {\n            throw new TypeError('The `followRedirects` option does not exist. Use `followRedirect` instead.');\n        }\n        if (options.agent) {\n            for (const key in options.agent) {\n                if (key !== 'http' && key !== 'https' && key !== 'http2') {\n                    throw new TypeError(`Expected the \\`options.agent\\` properties to be \\`http\\`, \\`https\\` or \\`http2\\`, got \\`${key}\\``);\n                }\n            }\n        }\n        options.maxRedirects = (_e = options.maxRedirects) !== null && _e !== void 0 ? _e : 0;\n        // Set non-enumerable properties\n        exports.setNonEnumerableProperties([defaults, rawOptions], options);\n        return normalize_arguments_1.default(options, defaults);\n    }\n    _lockWrite() {\n        const onLockedWrite = () => {\n            throw new TypeError('The payload has been already provided');\n        };\n        this.write = onLockedWrite;\n        this.end = onLockedWrite;\n    }\n    _unlockWrite() {\n        this.write = super.write;\n        this.end = super.end;\n    }\n    async _finalizeBody() {\n        const { options } = this;\n        const { headers } = options;\n        const isForm = !is_1.default.undefined(options.form);\n        const isJSON = !is_1.default.undefined(options.json);\n        const isBody = !is_1.default.undefined(options.body);\n        const hasPayload = isForm || isJSON || isBody;\n        const cannotHaveBody = exports.withoutBody.has(options.method) && !(options.method === 'GET' && options.allowGetBody);\n        this._cannotHaveBody = cannotHaveBody;\n        if (hasPayload) {\n            if (cannotHaveBody) {\n                throw new TypeError(`The \\`${options.method}\\` method cannot be used with a body`);\n            }\n            if ([isBody, isForm, isJSON].filter(isTrue => isTrue).length > 1) {\n                throw new TypeError('The `body`, `json` and `form` options are mutually exclusive');\n            }\n            if (isBody &&\n                !(options.body instanceof stream_1.Readable) &&\n                !is_1.default.string(options.body) &&\n                !is_1.default.buffer(options.body) &&\n                !is_form_data_1.default(options.body)) {\n                throw new TypeError('The `body` option must be a stream.Readable, string or Buffer');\n            }\n            if (isForm && !is_1.default.object(options.form)) {\n                throw new TypeError('The `form` option must be an Object');\n            }\n            {\n                // Serialize body\n                const noContentType = !is_1.default.string(headers['content-type']);\n                if (isBody) {\n                    // Special case for https://github.com/form-data/form-data\n                    if (is_form_data_1.default(options.body) && noContentType) {\n                        headers['content-type'] = `multipart/form-data; boundary=${options.body.getBoundary()}`;\n                    }\n                    this[kBody] = options.body;\n                }\n                else if (isForm) {\n                    if (noContentType) {\n                        headers['content-type'] = 'application/x-www-form-urlencoded';\n                    }\n                    this[kBody] = (new url_1.URLSearchParams(options.form)).toString();\n                }\n                else {\n                    if (noContentType) {\n                        headers['content-type'] = 'application/json';\n                    }\n                    this[kBody] = options.stringifyJson(options.json);\n                }\n                const uploadBodySize = await get_body_size_1.default(this[kBody], options.headers);\n                // See https://tools.ietf.org/html/rfc7230#section-3.3.2\n                // A user agent SHOULD send a Content-Length in a request message when\n                // no Transfer-Encoding is sent and the request method defines a meaning\n                // for an enclosed payload body.  For example, a Content-Length header\n                // field is normally sent in a POST request even when the value is 0\n                // (indicating an empty payload body).  A user agent SHOULD NOT send a\n                // Content-Length header field when the request message does not contain\n                // a payload body and the method semantics do not anticipate such a\n                // body.\n                if (is_1.default.undefined(headers['content-length']) && is_1.default.undefined(headers['transfer-encoding'])) {\n                    if (!cannotHaveBody && !is_1.default.undefined(uploadBodySize)) {\n                        headers['content-length'] = String(uploadBodySize);\n                    }\n                }\n            }\n        }\n        else if (cannotHaveBody) {\n            this._lockWrite();\n        }\n        else {\n            this._unlockWrite();\n        }\n        this[kBodySize] = Number(headers['content-length']) || undefined;\n    }\n    async _onResponseBase(response) {\n        const { options } = this;\n        const { url } = options;\n        this[kOriginalResponse] = response;\n        if (options.decompress) {\n            response = decompressResponse(response);\n        }\n        const statusCode = response.statusCode;\n        const typedResponse = response;\n        typedResponse.statusMessage = typedResponse.statusMessage ? typedResponse.statusMessage : http.STATUS_CODES[statusCode];\n        typedResponse.url = options.url.toString();\n        typedResponse.requestUrl = this.requestUrl;\n        typedResponse.redirectUrls = this.redirects;\n        typedResponse.request = this;\n        typedResponse.isFromCache = response.fromCache || false;\n        typedResponse.ip = this.ip;\n        typedResponse.retryCount = this.retryCount;\n        this[kIsFromCache] = typedResponse.isFromCache;\n        this[kResponseSize] = Number(response.headers['content-length']) || undefined;\n        this[kResponse] = response;\n        response.once('end', () => {\n            this[kResponseSize] = this[kDownloadedSize];\n            this.emit('downloadProgress', this.downloadProgress);\n        });\n        response.once('error', (error) => {\n            // Force clean-up, because some packages don't do this.\n            // TODO: Fix decompress-response\n            response.destroy();\n            this._beforeError(new ReadError(error, this));\n        });\n        response.once('aborted', () => {\n            this._beforeError(new ReadError({\n                name: 'Error',\n                message: 'The server aborted pending request',\n                code: 'ECONNRESET'\n            }, this));\n        });\n        this.emit('downloadProgress', this.downloadProgress);\n        const rawCookies = response.headers['set-cookie'];\n        if (is_1.default.object(options.cookieJar) && rawCookies) {\n            let promises = rawCookies.map(async (rawCookie) => options.cookieJar.setCookie(rawCookie, url.toString()));\n            if (options.ignoreInvalidCookies) {\n                promises = promises.map(async (p) => p.catch(() => { }));\n            }\n            try {\n                await Promise.all(promises);\n            }\n            catch (error) {\n                this._beforeError(error);\n                return;\n            }\n        }\n        if (options.followRedirect && response.headers.location && redirectCodes.has(statusCode)) {\n            // We're being redirected, we don't care about the response.\n            // It'd be best to abort the request, but we can't because\n            // we would have to sacrifice the TCP connection. We don't want that.\n            response.resume();\n            if (this[kRequest]) {\n                this[kCancelTimeouts]();\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete this[kRequest];\n                this[kUnproxyEvents]();\n            }\n            const shouldBeGet = statusCode === 303 && options.method !== 'GET' && options.method !== 'HEAD';\n            if (shouldBeGet || !options.methodRewriting) {\n                // Server responded with \"see other\", indicating that the resource exists at another location,\n                // and the client should request it from that location via GET or HEAD.\n                options.method = 'GET';\n                if ('body' in options) {\n                    delete options.body;\n                }\n                if ('json' in options) {\n                    delete options.json;\n                }\n                if ('form' in options) {\n                    delete options.form;\n                }\n                this[kBody] = undefined;\n                delete options.headers['content-length'];\n            }\n            if (this.redirects.length >= options.maxRedirects) {\n                this._beforeError(new MaxRedirectsError(this));\n                return;\n            }\n            try {\n                // Do not remove. See https://github.com/sindresorhus/got/pull/214\n                const redirectBuffer = Buffer.from(response.headers.location, 'binary').toString();\n                // Handles invalid URLs. See https://github.com/sindresorhus/got/issues/604\n                const redirectUrl = new url_1.URL(redirectBuffer, url);\n                const redirectString = redirectUrl.toString();\n                decodeURI(redirectString);\n                // eslint-disable-next-line no-inner-declarations\n                function isUnixSocketURL(url) {\n                    return url.protocol === 'unix:' || url.hostname === 'unix';\n                }\n                if (!isUnixSocketURL(url) && isUnixSocketURL(redirectUrl)) {\n                    this._beforeError(new RequestError('Cannot redirect to UNIX socket', {}, this));\n                    return;\n                }\n                // Redirecting to a different site, clear sensitive data.\n                if (redirectUrl.hostname !== url.hostname || redirectUrl.port !== url.port) {\n                    if ('host' in options.headers) {\n                        delete options.headers.host;\n                    }\n                    if ('cookie' in options.headers) {\n                        delete options.headers.cookie;\n                    }\n                    if ('authorization' in options.headers) {\n                        delete options.headers.authorization;\n                    }\n                    if (options.username || options.password) {\n                        options.username = '';\n                        options.password = '';\n                    }\n                }\n                else {\n                    redirectUrl.username = options.username;\n                    redirectUrl.password = options.password;\n                }\n                this.redirects.push(redirectString);\n                options.url = redirectUrl;\n                for (const hook of options.hooks.beforeRedirect) {\n                    // eslint-disable-next-line no-await-in-loop\n                    await hook(options, typedResponse);\n                }\n                this.emit('redirect', typedResponse, options);\n                await this._makeRequest();\n            }\n            catch (error) {\n                this._beforeError(error);\n                return;\n            }\n            return;\n        }\n        if (options.isStream && options.throwHttpErrors && !is_response_ok_1.isResponseOk(typedResponse)) {\n            this._beforeError(new HTTPError(typedResponse));\n            return;\n        }\n        response.on('readable', () => {\n            if (this[kTriggerRead]) {\n                this._read();\n            }\n        });\n        this.on('resume', () => {\n            response.resume();\n        });\n        this.on('pause', () => {\n            response.pause();\n        });\n        response.once('end', () => {\n            this.push(null);\n        });\n        this.emit('response', response);\n        for (const destination of this[kServerResponsesPiped]) {\n            if (destination.headersSent) {\n                continue;\n            }\n            // eslint-disable-next-line guard-for-in\n            for (const key in response.headers) {\n                const isAllowed = options.decompress ? key !== 'content-encoding' : true;\n                const value = response.headers[key];\n                if (isAllowed) {\n                    destination.setHeader(key, value);\n                }\n            }\n            destination.statusCode = statusCode;\n        }\n    }\n    async _onResponse(response) {\n        try {\n            await this._onResponseBase(response);\n        }\n        catch (error) {\n            /* istanbul ignore next: better safe than sorry */\n            this._beforeError(error);\n        }\n    }\n    _onRequest(request) {\n        const { options } = this;\n        const { timeout, url } = options;\n        http_timer_1.default(request);\n        this[kCancelTimeouts] = timed_out_1.default(request, timeout, url);\n        const responseEventName = options.cache ? 'cacheableResponse' : 'response';\n        request.once(responseEventName, (response) => {\n            void this._onResponse(response);\n        });\n        request.once('error', (error) => {\n            var _a;\n            // Force clean-up, because some packages (e.g. nock) don't do this.\n            request.destroy();\n            // Node.js <= 12.18.2 mistakenly emits the response `end` first.\n            (_a = request.res) === null || _a === void 0 ? void 0 : _a.removeAllListeners('end');\n            error = error instanceof timed_out_1.TimeoutError ? new TimeoutError(error, this.timings, this) : new RequestError(error.message, error, this);\n            this._beforeError(error);\n        });\n        this[kUnproxyEvents] = proxy_events_1.default(request, this, proxiedRequestEvents);\n        this[kRequest] = request;\n        this.emit('uploadProgress', this.uploadProgress);\n        // Send body\n        const body = this[kBody];\n        const currentRequest = this.redirects.length === 0 ? this : request;\n        if (is_1.default.nodeStream(body)) {\n            body.pipe(currentRequest);\n            body.once('error', (error) => {\n                this._beforeError(new UploadError(error, this));\n            });\n        }\n        else {\n            this._unlockWrite();\n            if (!is_1.default.undefined(body)) {\n                this._writeRequest(body, undefined, () => { });\n                currentRequest.end();\n                this._lockWrite();\n            }\n            else if (this._cannotHaveBody || this._noPipe) {\n                currentRequest.end();\n                this._lockWrite();\n            }\n        }\n        this.emit('request', request);\n    }\n    async _createCacheableRequest(url, options) {\n        return new Promise((resolve, reject) => {\n            // TODO: Remove `utils/url-to-options.ts` when `cacheable-request` is fixed\n            Object.assign(options, url_to_options_1.default(url));\n            // `http-cache-semantics` checks this\n            // TODO: Fix this ignore.\n            // @ts-expect-error\n            delete options.url;\n            let request;\n            // This is ugly\n            const cacheRequest = cacheableStore.get(options.cache)(options, async (response) => {\n                // TODO: Fix `cacheable-response`\n                response._readableState.autoDestroy = false;\n                if (request) {\n                    (await request).emit('cacheableResponse', response);\n                }\n                resolve(response);\n            });\n            // Restore options\n            options.url = url;\n            cacheRequest.once('error', reject);\n            cacheRequest.once('request', async (requestOrPromise) => {\n                request = requestOrPromise;\n                resolve(request);\n            });\n        });\n    }\n    async _makeRequest() {\n        var _a, _b, _c, _d, _e;\n        const { options } = this;\n        const { headers } = options;\n        for (const key in headers) {\n            if (is_1.default.undefined(headers[key])) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete headers[key];\n            }\n            else if (is_1.default.null_(headers[key])) {\n                throw new TypeError(`Use \\`undefined\\` instead of \\`null\\` to delete the \\`${key}\\` header`);\n            }\n        }\n        if (options.decompress && is_1.default.undefined(headers['accept-encoding'])) {\n            headers['accept-encoding'] = supportsBrotli ? 'gzip, deflate, br' : 'gzip, deflate';\n        }\n        // Set cookies\n        if (options.cookieJar) {\n            const cookieString = await options.cookieJar.getCookieString(options.url.toString());\n            if (is_1.default.nonEmptyString(cookieString)) {\n                options.headers.cookie = cookieString;\n            }\n        }\n        for (const hook of options.hooks.beforeRequest) {\n            // eslint-disable-next-line no-await-in-loop\n            const result = await hook(options);\n            if (!is_1.default.undefined(result)) {\n                // @ts-expect-error Skip the type mismatch to support abstract responses\n                options.request = () => result;\n                break;\n            }\n        }\n        if (options.body && this[kBody] !== options.body) {\n            this[kBody] = options.body;\n        }\n        const { agent, request, timeout, url } = options;\n        if (options.dnsCache && !('lookup' in options)) {\n            options.lookup = options.dnsCache.lookup;\n        }\n        // UNIX sockets\n        if (url.hostname === 'unix') {\n            const matches = /(?<socketPath>.+?):(?<path>.+)/.exec(`${url.pathname}${url.search}`);\n            if (matches === null || matches === void 0 ? void 0 : matches.groups) {\n                const { socketPath, path } = matches.groups;\n                Object.assign(options, {\n                    socketPath,\n                    path,\n                    host: ''\n                });\n            }\n        }\n        const isHttps = url.protocol === 'https:';\n        // Fallback function\n        let fallbackFn;\n        if (options.http2) {\n            fallbackFn = http2wrapper.auto;\n        }\n        else {\n            fallbackFn = isHttps ? https.request : http.request;\n        }\n        const realFn = (_a = options.request) !== null && _a !== void 0 ? _a : fallbackFn;\n        // Cache support\n        const fn = options.cache ? this._createCacheableRequest : realFn;\n        // Pass an agent directly when HTTP2 is disabled\n        if (agent && !options.http2) {\n            options.agent = agent[isHttps ? 'https' : 'http'];\n        }\n        // Prepare plain HTTP request options\n        options[kRequest] = realFn;\n        delete options.request;\n        // TODO: Fix this ignore.\n        // @ts-expect-error\n        delete options.timeout;\n        const requestOptions = options;\n        requestOptions.shared = (_b = options.cacheOptions) === null || _b === void 0 ? void 0 : _b.shared;\n        requestOptions.cacheHeuristic = (_c = options.cacheOptions) === null || _c === void 0 ? void 0 : _c.cacheHeuristic;\n        requestOptions.immutableMinTimeToLive = (_d = options.cacheOptions) === null || _d === void 0 ? void 0 : _d.immutableMinTimeToLive;\n        requestOptions.ignoreCargoCult = (_e = options.cacheOptions) === null || _e === void 0 ? void 0 : _e.ignoreCargoCult;\n        // If `dnsLookupIpVersion` is not present do not override `family`\n        if (options.dnsLookupIpVersion !== undefined) {\n            try {\n                requestOptions.family = dns_ip_version_1.dnsLookupIpVersionToFamily(options.dnsLookupIpVersion);\n            }\n            catch (_f) {\n                throw new Error('Invalid `dnsLookupIpVersion` option value');\n            }\n        }\n        // HTTPS options remapping\n        if (options.https) {\n            if ('rejectUnauthorized' in options.https) {\n                requestOptions.rejectUnauthorized = options.https.rejectUnauthorized;\n            }\n            if (options.https.checkServerIdentity) {\n                requestOptions.checkServerIdentity = options.https.checkServerIdentity;\n            }\n            if (options.https.certificateAuthority) {\n                requestOptions.ca = options.https.certificateAuthority;\n            }\n            if (options.https.certificate) {\n                requestOptions.cert = options.https.certificate;\n            }\n            if (options.https.key) {\n                requestOptions.key = options.https.key;\n            }\n            if (options.https.passphrase) {\n                requestOptions.passphrase = options.https.passphrase;\n            }\n            if (options.https.pfx) {\n                requestOptions.pfx = options.https.pfx;\n            }\n        }\n        try {\n            let requestOrResponse = await fn(url, requestOptions);\n            if (is_1.default.undefined(requestOrResponse)) {\n                requestOrResponse = fallbackFn(url, requestOptions);\n            }\n            // Restore options\n            options.request = request;\n            options.timeout = timeout;\n            options.agent = agent;\n            // HTTPS options restore\n            if (options.https) {\n                if ('rejectUnauthorized' in options.https) {\n                    delete requestOptions.rejectUnauthorized;\n                }\n                if (options.https.checkServerIdentity) {\n                    // @ts-expect-error - This one will be removed when we remove the alias.\n                    delete requestOptions.checkServerIdentity;\n                }\n                if (options.https.certificateAuthority) {\n                    delete requestOptions.ca;\n                }\n                if (options.https.certificate) {\n                    delete requestOptions.cert;\n                }\n                if (options.https.key) {\n                    delete requestOptions.key;\n                }\n                if (options.https.passphrase) {\n                    delete requestOptions.passphrase;\n                }\n                if (options.https.pfx) {\n                    delete requestOptions.pfx;\n                }\n            }\n            if (isClientRequest(requestOrResponse)) {\n                this._onRequest(requestOrResponse);\n                // Emit the response after the stream has been ended\n            }\n            else if (this.writable) {\n                this.once('finish', () => {\n                    void this._onResponse(requestOrResponse);\n                });\n                this._unlockWrite();\n                this.end();\n                this._lockWrite();\n            }\n            else {\n                void this._onResponse(requestOrResponse);\n            }\n        }\n        catch (error) {\n            if (error instanceof CacheableRequest.CacheError) {\n                throw new CacheError(error, this);\n            }\n            throw new RequestError(error.message, error, this);\n        }\n    }\n    async _error(error) {\n        try {\n            for (const hook of this.options.hooks.beforeError) {\n                // eslint-disable-next-line no-await-in-loop\n                error = await hook(error);\n            }\n        }\n        catch (error_) {\n            error = new RequestError(error_.message, error_, this);\n        }\n        this.destroy(error);\n    }\n    _beforeError(error) {\n        if (this[kStopReading]) {\n            return;\n        }\n        const { options } = this;\n        const retryCount = this.retryCount + 1;\n        this[kStopReading] = true;\n        if (!(error instanceof RequestError)) {\n            error = new RequestError(error.message, error, this);\n        }\n        const typedError = error;\n        const { response } = typedError;\n        void (async () => {\n            if (response && !response.body) {\n                response.setEncoding(this._readableState.encoding);\n                try {\n                    response.rawBody = await get_buffer_1.default(response);\n                    response.body = response.rawBody.toString();\n                }\n                catch (_a) { }\n            }\n            if (this.listenerCount('retry') !== 0) {\n                let backoff;\n                try {\n                    let retryAfter;\n                    if (response && 'retry-after' in response.headers) {\n                        retryAfter = Number(response.headers['retry-after']);\n                        if (Number.isNaN(retryAfter)) {\n                            retryAfter = Date.parse(response.headers['retry-after']) - Date.now();\n                            if (retryAfter <= 0) {\n                                retryAfter = 1;\n                            }\n                        }\n                        else {\n                            retryAfter *= 1000;\n                        }\n                    }\n                    backoff = await options.retry.calculateDelay({\n                        attemptCount: retryCount,\n                        retryOptions: options.retry,\n                        error: typedError,\n                        retryAfter,\n                        computedValue: calculate_retry_delay_1.default({\n                            attemptCount: retryCount,\n                            retryOptions: options.retry,\n                            error: typedError,\n                            retryAfter,\n                            computedValue: 0\n                        })\n                    });\n                }\n                catch (error_) {\n                    void this._error(new RequestError(error_.message, error_, this));\n                    return;\n                }\n                if (backoff) {\n                    const retry = async () => {\n                        try {\n                            for (const hook of this.options.hooks.beforeRetry) {\n                                // eslint-disable-next-line no-await-in-loop\n                                await hook(this.options, typedError, retryCount);\n                            }\n                        }\n                        catch (error_) {\n                            void this._error(new RequestError(error_.message, error, this));\n                            return;\n                        }\n                        // Something forced us to abort the retry\n                        if (this.destroyed) {\n                            return;\n                        }\n                        this.destroy();\n                        this.emit('retry', retryCount, error);\n                    };\n                    this[kRetryTimeout] = setTimeout(retry, backoff);\n                    return;\n                }\n            }\n            void this._error(typedError);\n        })();\n    }\n    _read() {\n        this[kTriggerRead] = true;\n        const response = this[kResponse];\n        if (response && !this[kStopReading]) {\n            // We cannot put this in the `if` above\n            // because `.read()` also triggers the `end` event\n            if (response.readableLength) {\n                this[kTriggerRead] = false;\n            }\n            let data;\n            while ((data = response.read()) !== null) {\n                this[kDownloadedSize] += data.length;\n                this[kStartedReading] = true;\n                const progress = this.downloadProgress;\n                if (progress.percent < 1) {\n                    this.emit('downloadProgress', progress);\n                }\n                this.push(data);\n            }\n        }\n    }\n    // Node.js 12 has incorrect types, so the encoding must be a string\n    _write(chunk, encoding, callback) {\n        const write = () => {\n            this._writeRequest(chunk, encoding, callback);\n        };\n        if (this.requestInitialized) {\n            write();\n        }\n        else {\n            this[kJobs].push(write);\n        }\n    }\n    _writeRequest(chunk, encoding, callback) {\n        if (this[kRequest].destroyed) {\n            // Probably the `ClientRequest` instance will throw\n            return;\n        }\n        this._progressCallbacks.push(() => {\n            this[kUploadedSize] += Buffer.byteLength(chunk, encoding);\n            const progress = this.uploadProgress;\n            if (progress.percent < 1) {\n                this.emit('uploadProgress', progress);\n            }\n        });\n        // TODO: What happens if it's from cache? Then this[kRequest] won't be defined.\n        this[kRequest].write(chunk, encoding, (error) => {\n            if (!error && this._progressCallbacks.length > 0) {\n                this._progressCallbacks.shift()();\n            }\n            callback(error);\n        });\n    }\n    _final(callback) {\n        const endRequest = () => {\n            // FIX: Node.js 10 calls the write callback AFTER the end callback!\n            while (this._progressCallbacks.length !== 0) {\n                this._progressCallbacks.shift()();\n            }\n            // We need to check if `this[kRequest]` is present,\n            // because it isn't when we use cache.\n            if (!(kRequest in this)) {\n                callback();\n                return;\n            }\n            if (this[kRequest].destroyed) {\n                callback();\n                return;\n            }\n            this[kRequest].end((error) => {\n                if (!error) {\n                    this[kBodySize] = this[kUploadedSize];\n                    this.emit('uploadProgress', this.uploadProgress);\n                    this[kRequest].emit('upload-complete');\n                }\n                callback(error);\n            });\n        };\n        if (this.requestInitialized) {\n            endRequest();\n        }\n        else {\n            this[kJobs].push(endRequest);\n        }\n    }\n    _destroy(error, callback) {\n        var _a;\n        this[kStopReading] = true;\n        // Prevent further retries\n        clearTimeout(this[kRetryTimeout]);\n        if (kRequest in this) {\n            this[kCancelTimeouts]();\n            // TODO: Remove the next `if` when these get fixed:\n            // - https://github.com/nodejs/node/issues/32851\n            if (!((_a = this[kResponse]) === null || _a === void 0 ? void 0 : _a.complete)) {\n                this[kRequest].destroy();\n            }\n        }\n        if (error !== null && !is_1.default.undefined(error) && !(error instanceof RequestError)) {\n            error = new RequestError(error.message, error, this);\n        }\n        callback(error);\n    }\n    get _isAboutToError() {\n        return this[kStopReading];\n    }\n    /**\n    The remote IP address.\n    */\n    get ip() {\n        var _a;\n        return (_a = this.socket) === null || _a === void 0 ? void 0 : _a.remoteAddress;\n    }\n    /**\n    Indicates whether the request has been aborted or not.\n    */\n    get aborted() {\n        var _a, _b, _c;\n        return ((_b = (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.destroyed) !== null && _b !== void 0 ? _b : this.destroyed) && !((_c = this[kOriginalResponse]) === null || _c === void 0 ? void 0 : _c.complete);\n    }\n    get socket() {\n        var _a, _b;\n        return (_b = (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.socket) !== null && _b !== void 0 ? _b : undefined;\n    }\n    /**\n    Progress event for downloading (receiving a response).\n    */\n    get downloadProgress() {\n        let percent;\n        if (this[kResponseSize]) {\n            percent = this[kDownloadedSize] / this[kResponseSize];\n        }\n        else if (this[kResponseSize] === this[kDownloadedSize]) {\n            percent = 1;\n        }\n        else {\n            percent = 0;\n        }\n        return {\n            percent,\n            transferred: this[kDownloadedSize],\n            total: this[kResponseSize]\n        };\n    }\n    /**\n    Progress event for uploading (sending a request).\n    */\n    get uploadProgress() {\n        let percent;\n        if (this[kBodySize]) {\n            percent = this[kUploadedSize] / this[kBodySize];\n        }\n        else if (this[kBodySize] === this[kUploadedSize]) {\n            percent = 1;\n        }\n        else {\n            percent = 0;\n        }\n        return {\n            percent,\n            transferred: this[kUploadedSize],\n            total: this[kBodySize]\n        };\n    }\n    /**\n    The object contains the following properties:\n\n    - `start` - Time when the request started.\n    - `socket` - Time when a socket was assigned to the request.\n    - `lookup` - Time when the DNS lookup finished.\n    - `connect` - Time when the socket successfully connected.\n    - `secureConnect` - Time when the socket securely connected.\n    - `upload` - Time when the request finished uploading.\n    - `response` - Time when the request fired `response` event.\n    - `end` - Time when the response fired `end` event.\n    - `error` - Time when the request fired `error` event.\n    - `abort` - Time when the request fired `abort` event.\n    - `phases`\n        - `wait` - `timings.socket - timings.start`\n        - `dns` - `timings.lookup - timings.socket`\n        - `tcp` - `timings.connect - timings.lookup`\n        - `tls` - `timings.secureConnect - timings.connect`\n        - `request` - `timings.upload - (timings.secureConnect || timings.connect)`\n        - `firstByte` - `timings.response - timings.upload`\n        - `download` - `timings.end - timings.response`\n        - `total` - `(timings.end || timings.error || timings.abort) - timings.start`\n\n    If something has not been measured yet, it will be `undefined`.\n\n    __Note__: The time is a `number` representing the milliseconds elapsed since the UNIX epoch.\n    */\n    get timings() {\n        var _a;\n        return (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.timings;\n    }\n    /**\n    Whether the response was retrieved from the cache.\n    */\n    get isFromCache() {\n        return this[kIsFromCache];\n    }\n    pipe(destination, options) {\n        if (this[kStartedReading]) {\n            throw new Error('Failed to pipe. The response has been emitted already.');\n        }\n        if (destination instanceof http_1.ServerResponse) {\n            this[kServerResponsesPiped].add(destination);\n        }\n        return super.pipe(destination, options);\n    }\n    unpipe(destination) {\n        if (destination instanceof http_1.ServerResponse) {\n            this[kServerResponsesPiped].delete(destination);\n        }\n        super.unpipe(destination);\n        return this;\n    }\n}\nexports.default = Request;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}