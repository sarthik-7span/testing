{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport VueResource from 'vue-resource';\nimport VueRouter from \"vue-router\";\nimport TheAll from \"./components/TheAll.vue\";\nimport TheSub from \"./components/TheSub.vue\";\nimport TheIndex from \"./components/TheIndex.vue\";\nVue.config.productionTip = false;\nVue.use(VueResource).use(VueRouter);\nconst router = new VueRouter({\n  routes: []\n});\n\n// rainbow Custom directive --start\n\n// Vue.directive('rainbow', {\n//   bind(el) {\n//     el.style.color = \"#\" + Math.random().toString().slice(2, 8)\n//   }\n// })\n// rainbow Custom directive --end\n\n// width Custom directive --start\n\nVue.directive('width', {\n  bind(el, binding) {\n    if (binding.value == 'wide') {\n      el.style.maxWidth = \"1200px\";\n    } else if (binding.value == 'mid-wide') {\n      el.style.maxWidth = \"1400px\";\n    } else {\n      el.style.maxWidth = \"1600px\";\n    }\n  }\n});\n// width Custom directive --end\n\n// Filter method\n// Vue.filter('toUpperCase', function (value) {\n//   return value.toUpperCase()\n// })\n\nVue.filter('slice', function (value) {\n  return value.slice(0, 100);\n});\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app').use(VueResource);","map":{"version":3,"names":["Vue","App","VueResource","VueRouter","TheAll","TheSub","TheIndex","config","productionTip","use","router","routes","directive","bind","el","binding","value","style","maxWidth","filter","slice","render","h","$mount"],"sources":["/home/spartan/demo/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport VueResource from 'vue-resource'\nimport VueRouter from \"vue-router\"\nimport TheAll from \"./components/TheAll.vue\";\nimport TheSub from \"./components/TheSub.vue\";\nimport TheIndex from \"./components/TheIndex.vue\";\n\n\nVue.config.productionTip = false\nVue.use(VueResource).use(VueRouter)\n\nconst router = new VueRouter({\n  routes: [\n    \n  ]\n})\n\n// rainbow Custom directive --start\n\n// Vue.directive('rainbow', {\n//   bind(el) {\n//     el.style.color = \"#\" + Math.random().toString().slice(2, 8)\n//   }\n// })\n// rainbow Custom directive --end\n\n\n\n// width Custom directive --start\n\nVue.directive('width', {\n  bind(el, binding) {\n    if (binding.value == 'wide') {\n      el.style.maxWidth = \"1200px\";\n    }\n    else if (binding.value == 'mid-wide') {\n      el.style.maxWidth = \"1400px\";\n    }\n    else {\n      el.style.maxWidth = \"1600px\";\n    }\n  }\n})\n// width Custom directive --end\n\n\n// Filter method\n// Vue.filter('toUpperCase', function (value) {\n//   return value.toUpperCase()\n// })\n\nVue.filter('slice', function (value) {\n  return value.slice(0, 100)\n})\n\n\nnew Vue({\n  router,\n  render: h => h(App),\n}).$mount('#app').use(VueResource);\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,QAAQ,MAAM,2BAA2B;AAGhDN,GAAG,CAACO,MAAM,CAACC,aAAa,GAAG,KAAK;AAChCR,GAAG,CAACS,GAAG,CAACP,WAAW,CAAC,CAACO,GAAG,CAACN,SAAS,CAAC;AAEnC,MAAMO,MAAM,GAAG,IAAIP,SAAS,CAAC;EAC3BQ,MAAM,EAAE;AAGV,CAAC,CAAC;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEAX,GAAG,CAACY,SAAS,CAAC,OAAO,EAAE;EACrBC,IAAI,CAACC,EAAE,EAAEC,OAAO,EAAE;IAChB,IAAIA,OAAO,CAACC,KAAK,IAAI,MAAM,EAAE;MAC3BF,EAAE,CAACG,KAAK,CAACC,QAAQ,GAAG,QAAQ;IAC9B,CAAC,MACI,IAAIH,OAAO,CAACC,KAAK,IAAI,UAAU,EAAE;MACpCF,EAAE,CAACG,KAAK,CAACC,QAAQ,GAAG,QAAQ;IAC9B,CAAC,MACI;MACHJ,EAAE,CAACG,KAAK,CAACC,QAAQ,GAAG,QAAQ;IAC9B;EACF;AACF,CAAC,CAAC;AACF;;AAGA;AACA;AACA;AACA;;AAEAlB,GAAG,CAACmB,MAAM,CAAC,OAAO,EAAE,UAAUH,KAAK,EAAE;EACnC,OAAOA,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;AAC5B,CAAC,CAAC;AAGF,IAAIpB,GAAG,CAAC;EACNU,MAAM;EACNW,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACrB,GAAG;AACpB,CAAC,CAAC,CAACsB,MAAM,CAAC,MAAM,CAAC,CAACd,GAAG,CAACP,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}