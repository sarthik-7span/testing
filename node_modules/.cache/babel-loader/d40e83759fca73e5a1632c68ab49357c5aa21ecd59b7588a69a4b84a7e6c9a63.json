{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* istanbul ignore file: deprecated */\nconst url_1 = require(\"url\");\nconst keys = ['protocol', 'host', 'hostname', 'port', 'pathname', 'search'];\nexports.default = (origin, options) => {\n  var _a, _b;\n  if (options.path) {\n    if (options.pathname) {\n      throw new TypeError('Parameters `path` and `pathname` are mutually exclusive.');\n    }\n    if (options.search) {\n      throw new TypeError('Parameters `path` and `search` are mutually exclusive.');\n    }\n    if (options.searchParams) {\n      throw new TypeError('Parameters `path` and `searchParams` are mutually exclusive.');\n    }\n  }\n  if (options.search && options.searchParams) {\n    throw new TypeError('Parameters `search` and `searchParams` are mutually exclusive.');\n  }\n  if (!origin) {\n    if (!options.protocol) {\n      throw new TypeError('No URL protocol specified');\n    }\n    origin = `${options.protocol}//${(_b = (_a = options.hostname) !== null && _a !== void 0 ? _a : options.host) !== null && _b !== void 0 ? _b : ''}`;\n  }\n  const url = new url_1.URL(origin);\n  if (options.path) {\n    const searchIndex = options.path.indexOf('?');\n    if (searchIndex === -1) {\n      options.pathname = options.path;\n    } else {\n      options.pathname = options.path.slice(0, searchIndex);\n      options.search = options.path.slice(searchIndex + 1);\n    }\n    delete options.path;\n  }\n  for (const key of keys) {\n    if (options[key]) {\n      url[key] = options[key].toString();\n    }\n  }\n  return url;\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","url_1","require","keys","default","origin","options","_a","_b","path","pathname","TypeError","search","searchParams","protocol","hostname","host","url","URL","searchIndex","indexOf","slice","key","toString"],"sources":["/home/spartan/Documents/vue.js/demo/node_modules/got/dist/source/core/utils/options-to-url.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* istanbul ignore file: deprecated */\nconst url_1 = require(\"url\");\nconst keys = [\n    'protocol',\n    'host',\n    'hostname',\n    'port',\n    'pathname',\n    'search'\n];\nexports.default = (origin, options) => {\n    var _a, _b;\n    if (options.path) {\n        if (options.pathname) {\n            throw new TypeError('Parameters `path` and `pathname` are mutually exclusive.');\n        }\n        if (options.search) {\n            throw new TypeError('Parameters `path` and `search` are mutually exclusive.');\n        }\n        if (options.searchParams) {\n            throw new TypeError('Parameters `path` and `searchParams` are mutually exclusive.');\n        }\n    }\n    if (options.search && options.searchParams) {\n        throw new TypeError('Parameters `search` and `searchParams` are mutually exclusive.');\n    }\n    if (!origin) {\n        if (!options.protocol) {\n            throw new TypeError('No URL protocol specified');\n        }\n        origin = `${options.protocol}//${(_b = (_a = options.hostname) !== null && _a !== void 0 ? _a : options.host) !== null && _b !== void 0 ? _b : ''}`;\n    }\n    const url = new url_1.URL(origin);\n    if (options.path) {\n        const searchIndex = options.path.indexOf('?');\n        if (searchIndex === -1) {\n            options.pathname = options.path;\n        }\n        else {\n            options.pathname = options.path.slice(0, searchIndex);\n            options.search = options.path.slice(searchIndex + 1);\n        }\n        delete options.path;\n    }\n    for (const key of keys) {\n        if (options[key]) {\n            url[key] = options[key].toString();\n        }\n    }\n    return url;\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC5B,MAAMC,IAAI,GAAG,CACT,UAAU,EACV,MAAM,EACN,UAAU,EACV,MAAM,EACN,UAAU,EACV,QAAQ,CACX;AACDJ,OAAO,CAACK,OAAO,GAAG,CAACC,MAAM,EAAEC,OAAO,KAAK;EACnC,IAAIC,EAAE,EAAEC,EAAE;EACV,IAAIF,OAAO,CAACG,IAAI,EAAE;IACd,IAAIH,OAAO,CAACI,QAAQ,EAAE;MAClB,MAAM,IAAIC,SAAS,CAAC,0DAA0D,CAAC;IACnF;IACA,IAAIL,OAAO,CAACM,MAAM,EAAE;MAChB,MAAM,IAAID,SAAS,CAAC,wDAAwD,CAAC;IACjF;IACA,IAAIL,OAAO,CAACO,YAAY,EAAE;MACtB,MAAM,IAAIF,SAAS,CAAC,8DAA8D,CAAC;IACvF;EACJ;EACA,IAAIL,OAAO,CAACM,MAAM,IAAIN,OAAO,CAACO,YAAY,EAAE;IACxC,MAAM,IAAIF,SAAS,CAAC,gEAAgE,CAAC;EACzF;EACA,IAAI,CAACN,MAAM,EAAE;IACT,IAAI,CAACC,OAAO,CAACQ,QAAQ,EAAE;MACnB,MAAM,IAAIH,SAAS,CAAC,2BAA2B,CAAC;IACpD;IACAN,MAAM,GAAI,GAAEC,OAAO,CAACQ,QAAS,KAAI,CAACN,EAAE,GAAG,CAACD,EAAE,GAAGD,OAAO,CAACS,QAAQ,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGD,OAAO,CAACU,IAAI,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAG,EAAC;EACvJ;EACA,MAAMS,GAAG,GAAG,IAAIhB,KAAK,CAACiB,GAAG,CAACb,MAAM,CAAC;EACjC,IAAIC,OAAO,CAACG,IAAI,EAAE;IACd,MAAMU,WAAW,GAAGb,OAAO,CAACG,IAAI,CAACW,OAAO,CAAC,GAAG,CAAC;IAC7C,IAAID,WAAW,KAAK,CAAC,CAAC,EAAE;MACpBb,OAAO,CAACI,QAAQ,GAAGJ,OAAO,CAACG,IAAI;IACnC,CAAC,MACI;MACDH,OAAO,CAACI,QAAQ,GAAGJ,OAAO,CAACG,IAAI,CAACY,KAAK,CAAC,CAAC,EAAEF,WAAW,CAAC;MACrDb,OAAO,CAACM,MAAM,GAAGN,OAAO,CAACG,IAAI,CAACY,KAAK,CAACF,WAAW,GAAG,CAAC,CAAC;IACxD;IACA,OAAOb,OAAO,CAACG,IAAI;EACvB;EACA,KAAK,MAAMa,GAAG,IAAInB,IAAI,EAAE;IACpB,IAAIG,OAAO,CAACgB,GAAG,CAAC,EAAE;MACdL,GAAG,CAACK,GAAG,CAAC,GAAGhB,OAAO,CAACgB,GAAG,CAAC,CAACC,QAAQ,EAAE;IACtC;EACJ;EACA,OAAON,GAAG;AACd,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}