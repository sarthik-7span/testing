{"ast":null,"code":"'use strict';\n\n/* istanbul ignore file: https://github.com/nodejs/node/blob/master/lib/internal/errors.js */\nconst makeError = (Base, key, getMessage) => {\n  module.exports[key] = class NodeError extends Base {\n    constructor(...args) {\n      super(typeof getMessage === 'string' ? getMessage : getMessage(args));\n      this.name = `${super.name} [${key}]`;\n      this.code = key;\n    }\n  };\n};\nmakeError(TypeError, 'ERR_INVALID_ARG_TYPE', args => {\n  const type = args[0].includes('.') ? 'property' : 'argument';\n  let valid = args[1];\n  const isManyTypes = Array.isArray(valid);\n  if (isManyTypes) {\n    valid = `${valid.slice(0, -1).join(', ')} or ${valid.slice(-1)}`;\n  }\n  return `The \"${args[0]}\" ${type} must be ${isManyTypes ? 'one of' : 'of'} type ${valid}. Received ${typeof args[2]}`;\n});\nmakeError(TypeError, 'ERR_INVALID_PROTOCOL', args => {\n  return `Protocol \"${args[0]}\" not supported. Expected \"${args[1]}\"`;\n});\nmakeError(Error, 'ERR_HTTP_HEADERS_SENT', args => {\n  return `Cannot ${args[0]} headers after they are sent to the client`;\n});\nmakeError(TypeError, 'ERR_INVALID_HTTP_TOKEN', args => {\n  return `${args[0]} must be a valid HTTP token [${args[1]}]`;\n});\nmakeError(TypeError, 'ERR_HTTP_INVALID_HEADER_VALUE', args => {\n  return `Invalid value \"${args[0]} for header \"${args[1]}\"`;\n});\nmakeError(TypeError, 'ERR_INVALID_CHAR', args => {\n  return `Invalid character in ${args[0]} [${args[1]}]`;\n});","map":{"version":3,"names":["makeError","Base","key","getMessage","module","exports","NodeError","constructor","args","name","code","TypeError","type","includes","valid","isManyTypes","Array","isArray","slice","join","Error"],"sources":["/home/spartan/Documents/vue.js/demo/node_modules/http2-wrapper/source/utils/errors.js"],"sourcesContent":["'use strict';\n/* istanbul ignore file: https://github.com/nodejs/node/blob/master/lib/internal/errors.js */\n\nconst makeError = (Base, key, getMessage) => {\n\tmodule.exports[key] = class NodeError extends Base {\n\t\tconstructor(...args) {\n\t\t\tsuper(typeof getMessage === 'string' ? getMessage : getMessage(args));\n\t\t\tthis.name = `${super.name} [${key}]`;\n\t\t\tthis.code = key;\n\t\t}\n\t};\n};\n\nmakeError(TypeError, 'ERR_INVALID_ARG_TYPE', args => {\n\tconst type = args[0].includes('.') ? 'property' : 'argument';\n\n\tlet valid = args[1];\n\tconst isManyTypes = Array.isArray(valid);\n\n\tif (isManyTypes) {\n\t\tvalid = `${valid.slice(0, -1).join(', ')} or ${valid.slice(-1)}`;\n\t}\n\n\treturn `The \"${args[0]}\" ${type} must be ${isManyTypes ? 'one of' : 'of'} type ${valid}. Received ${typeof args[2]}`;\n});\n\nmakeError(TypeError, 'ERR_INVALID_PROTOCOL', args => {\n\treturn `Protocol \"${args[0]}\" not supported. Expected \"${args[1]}\"`;\n});\n\nmakeError(Error, 'ERR_HTTP_HEADERS_SENT', args => {\n\treturn `Cannot ${args[0]} headers after they are sent to the client`;\n});\n\nmakeError(TypeError, 'ERR_INVALID_HTTP_TOKEN', args => {\n\treturn `${args[0]} must be a valid HTTP token [${args[1]}]`;\n});\n\nmakeError(TypeError, 'ERR_HTTP_INVALID_HEADER_VALUE', args => {\n\treturn `Invalid value \"${args[0]} for header \"${args[1]}\"`;\n});\n\nmakeError(TypeError, 'ERR_INVALID_CHAR', args => {\n\treturn `Invalid character in ${args[0]} [${args[1]}]`;\n});\n"],"mappings":"AAAA,YAAY;;AACZ;AAEA,MAAMA,SAAS,GAAG,CAACC,IAAI,EAAEC,GAAG,EAAEC,UAAU,KAAK;EAC5CC,MAAM,CAACC,OAAO,CAACH,GAAG,CAAC,GAAG,MAAMI,SAAS,SAASL,IAAI,CAAC;IAClDM,WAAW,CAAC,GAAGC,IAAI,EAAE;MACpB,KAAK,CAAC,OAAOL,UAAU,KAAK,QAAQ,GAAGA,UAAU,GAAGA,UAAU,CAACK,IAAI,CAAC,CAAC;MACrE,IAAI,CAACC,IAAI,GAAI,GAAE,KAAK,CAACA,IAAK,KAAIP,GAAI,GAAE;MACpC,IAAI,CAACQ,IAAI,GAAGR,GAAG;IAChB;EACD,CAAC;AACF,CAAC;AAEDF,SAAS,CAACW,SAAS,EAAE,sBAAsB,EAAEH,IAAI,IAAI;EACpD,MAAMI,IAAI,GAAGJ,IAAI,CAAC,CAAC,CAAC,CAACK,QAAQ,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,UAAU;EAE5D,IAAIC,KAAK,GAAGN,IAAI,CAAC,CAAC,CAAC;EACnB,MAAMO,WAAW,GAAGC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC;EAExC,IAAIC,WAAW,EAAE;IAChBD,KAAK,GAAI,GAAEA,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAE,OAAML,KAAK,CAACI,KAAK,CAAC,CAAC,CAAC,CAAE,EAAC;EACjE;EAEA,OAAQ,QAAOV,IAAI,CAAC,CAAC,CAAE,KAAII,IAAK,YAAWG,WAAW,GAAG,QAAQ,GAAG,IAAK,SAAQD,KAAM,cAAa,OAAON,IAAI,CAAC,CAAC,CAAE,EAAC;AACrH,CAAC,CAAC;AAEFR,SAAS,CAACW,SAAS,EAAE,sBAAsB,EAAEH,IAAI,IAAI;EACpD,OAAQ,aAAYA,IAAI,CAAC,CAAC,CAAE,8BAA6BA,IAAI,CAAC,CAAC,CAAE,GAAE;AACpE,CAAC,CAAC;AAEFR,SAAS,CAACoB,KAAK,EAAE,uBAAuB,EAAEZ,IAAI,IAAI;EACjD,OAAQ,UAASA,IAAI,CAAC,CAAC,CAAE,4CAA2C;AACrE,CAAC,CAAC;AAEFR,SAAS,CAACW,SAAS,EAAE,wBAAwB,EAAEH,IAAI,IAAI;EACtD,OAAQ,GAAEA,IAAI,CAAC,CAAC,CAAE,gCAA+BA,IAAI,CAAC,CAAC,CAAE,GAAE;AAC5D,CAAC,CAAC;AAEFR,SAAS,CAACW,SAAS,EAAE,+BAA+B,EAAEH,IAAI,IAAI;EAC7D,OAAQ,kBAAiBA,IAAI,CAAC,CAAC,CAAE,gBAAeA,IAAI,CAAC,CAAC,CAAE,GAAE;AAC3D,CAAC,CAAC;AAEFR,SAAS,CAACW,SAAS,EAAE,kBAAkB,EAAEH,IAAI,IAAI;EAChD,OAAQ,wBAAuBA,IAAI,CAAC,CAAC,CAAE,KAAIA,IAAI,CAAC,CAAC,CAAE,GAAE;AACtD,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}